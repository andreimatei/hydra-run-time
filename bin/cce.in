#! @SBASH@
# $Id$
#
copyright="Copyright (C) 2009 the CSA group - Universiteit van Amsterdam."
#
# This program is free software: you can redistribute it and/or modify 
# it under the terms of the GNU General Public License as published by   
# the Free Software Foundation; either version 2, or (at your option)    
# any later version.  
#   
# This program is distributed in the hope that it will be useful,   
# but WITHOUT ANY WARRANTY; without even the implied warranty of    
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     
# GNU General Public License for more details.    
#   
# You should have received a copy of the GNU General Public License 
# along with this program; if not, write to the Free Software 
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA     
# 02110-1301, USA.    
set -e
root=@bindir@
srcincdir=@srcincdir@
incdir=@incdir@
pkgdatadir=@pkgdatadir@
srcdatadir=@srcdatadir@
pkglibdir=@pkglibdir@
python=@python@
timestamp=$(echo '$Date$'|cut -d' ' -f2)
version=1

do_usage() {
    cat <<EOF
Configuration Chain Expander.

The \`cce' utility manages configurations for \`slc'. It expands
configuration aliases (short names) into complete strings and provides
shell variables to drive compilation in \`slc'.

Usage: $0 [OPTION] DIALECT-ARCH-OS
   or: $0 [OPTION] ALIAS

Options:
  -s, --set-vars     print shell variables for \`slc'
  -t, --time-stamp   print date of last modification, then exit
  -h, --help         print this help, then exit
  -v, --version      print version number, then exit

Environment variables:
  CC CXX
  CC_ALPHA CC_MTALPHA UTCC_MTALPHA
  CC_SPARC CC_MTSPARC UTCC_MTSPARC  

Examples:

seqc ptl utc0 ppp utcx ptlx
ppp-mtsparc-sim

Report bugs and patches to the CSA group.
EOF
    exit 0
}

do_version() {
    rev='$Rev$'
    rev=$(echo "$rev"|cut -d' ' -f2)
    cat <<EOF
cce $version.$rev ($timestamp)

$copyright
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Written by Raphael 'kena' Poss.
EOF
    exit 0
}

do_timestamp() {
    echo "$timestamp"
    exit 0
}

die() {
    echo "$0:" "$@" >&2
    exit 1
}

# Command line analysis
alias=
set_vars=
describe=
check=
for arg in "$@"; do
    case $arg in
	-v|--version) do_version ;;
	-t|--timestamp) do_timestamp ;;
	-s|--set-vars) set_vars=1 ;;
	-h|--help) do_usage;;
	-*) echo "$0: unrecognized command-line argument: $arg (try -h)" >&2; exit 1;;
	*) alias=$arg
    esac
done
if test -z "$alias"; then do_usage; fi

# Expand one-word aliases to some arbitrary
# pre-defined configurations
case $alias in
    seqc)  alias=seqc-host-host-seqc ;;
    ptl)   alias=ptl-host-host-ptl ;;
    utc0)  alias=utc0-mtalpha-sim-proto ;;
    ppp)   alias=ppp-mtalpha-sim ;;
    ptlx)  alias=ptlx-x-x ;;
    utcx)  alias=utc-x-x ;;
    *-*)   ;; # more than one word: pass to next stage
    *)     # remaining single-word aliases
	die "$alias: unknown alias" ;;
esac

# Expand two-word aliases according to inventory
case $alias in
    *-*-*)   ;; # more than two word: pass to next stage
    *) 
	IFS='-' read dialect arch <<EOF
$alias
EOF
	case $alias in
	    utc0-*)
		alias=$alias-sim-proto
		;;
	    ppp-mt*)
		alias=$alias-sim
		;;
	    ptl-host)
		alias=$alias-host-ptl
		;;
	    seqc-host)
		alias=$alias-host-seqc
		;;
	    *)
		die "$alias: unknown alias" ;;
	esac
	;;
esac

# Other cases
case $alias in
    *-*-*)
     # 3 or more parts, use them
	IFS='-' read slc_dialect slc_arch slc_os <<EOF
$alias
EOF
	;;
    *) 
     # Any other form, unrecognized for now
	die "$alias: unknown alias" ;;
esac

slc_tag=$slc_dialect-$slc_arch-$slc_os

if test "x$set_vars" = x; then
    echo $slc_tag
    exit 0
fi

archvar=$(echo "$slc_arch"|tr a-z A-Z)
basearch=$(echo "$slc_arch"|cut -c3-)
basearchvar=$(echo "$basearch"|tr a-z A-Z)

# Language mode selection
case $slc_dialect in
    ptl*)     slc_complang=cpp;;
    seqc|ppp) slc_complang=c;;
    utc*)     slc_complang=utc;;
    *) 
esac

# Transformation selection
case $slc_dialect-$slc_arch in
    utc*|seqc*|ptl*) slc_transbase=$slc_dialect	;;
    ppp-*)     slc_transbase=ppp$basearch ;;
esac
slc_trans=$srcdatadir/t-$slc_transbase
if test -r "$srcincdir/slc_m4sugar.m4"; then
  slc_tflags="$slc_tflags $srcincdir/slc_m4sugar.m4"
else
  slc_tflags="$slc_tflags $incdir/slc_m4sugar.m4"
fi
slc_tflags="$slc_tflags $srcincdir/slc.m4 -I$slc_trans -I$incdir -I$srcincdir -DPYTHON=$python -DSPP_PY=$root/spp"
slc_ppflags="$slc_ppflags -I$slc_trans/include -I$incdir -I$srcincdir"

# Compiler selection
case $slc_dialect-$slc_arch in
    *-x) slc_compiler="$root/scu compile" ;;
    *-host)
	case $slc_complang in
	    cpp) slc_compiler=${CXX:-g++} ;;
	    c)   slc_compiler=${CC:-gcc} ;;
	    utc) die "no compiler for $dialect-$arch" ;;
	esac
	slc_filter=cp
	;;
    ppp-*)
        archcomp=$(eval "echo \${CC_$basearchvar:-$basearch-linux-gnu-gcc}")
	slc_compiler="$python $root/spp $slc_transbase compile $slc_arch $archcomp"
	slc_filter="$python $root/spp $slc_transbase filter $slc_arch $archcomp"
	;;
    *-*)
	case $slc_complang in
	    cpp) slc_compiler=$(eval "echo \${CXX_$basearchvar:-$basearch-linux-gnu-g++}") ;;
	    c)   slc_compiler=$(eval "echo \${CC_$basearchvar:-$basearch-linux-gnu-gcc} -std=gnu99") ;;
	    utc) slc_compiler=$(eval "echo \${UTCC_$archvar:-$slc_arch-linux-gnu-gcc} -std=utc") ;;
	esac
	slc_filter=cp
	;;
    
esac

# Compiler flags selection; default to optimize
slc_cflags="$slc_cflags -O2"

# Assembler and linker selection
case $slc_complang-$slc_arch in
    *-x)      slc_aslink="$root/scu assemble/link" ;;
    cpp-host) slc_aslink=${CXX:-g++} ;;
    *-host)   slc_aslink=${CC:-gcc} ;;
    cpp-*)    slc_aslink=$(eval "echo \${CXX_$archvar:-$slc_arch-linux-gnu-g++}") ;;
    *-*)      slc_aslink=$(eval "echo \${CC_$archvar:-$slc_arch-linux-gnu-gcc}") ;;
esac

# Extra defines
case $slc_arch in
    mtalpha) ;;
    *)
	slc_tflags="$slc_tflags -DHAVE_C_DIVIDE"
	;;
esac

# Extra ldflags selection
case $slc_arch in
    mt*)
	slc_ldflags="$slc_ldflags -Wl,-Ttext -Wl,0 -nostdlib -nodefaultlibs"
	;;
    *)
	;;
esac

# OS selection
case $slc_os in
    x) ;;
    *) 
	incdir1=$pkgdatadir/$slc_arch-$slc_os/include
	incdir2=$srcdatadir/$slc_arch-$slc_os/include
	osdir=$pkglibdir/$slc_arch-$slc_os
	slc_ppflags="$slc_ppflags -I$incdir1 -I$incdir2"
	slc_ldflags="$slc_ldflags -L$osdir -lslos $osdir/slrt.o"
	;;
esac

# Program entry selection
case $slc_os in
    host-ptl)
	slc_ldflags="$slc_ldflags -lpthread"
	;;
    *)  ;;
esac

set | grep '^slc_'




