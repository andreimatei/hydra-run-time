#! @BASH@
# $Id$
#
copyright="Copyright (C) 2009 the CSA group - Universiteit van Amsterdam."
# All rights reserved.

set -e
slc_libdir=${SLC_LIBDIR:-@slc_libdir@}

timestamp=$(echo '$Date$'|cut -d' ' -f2)
version=1

do_usage() {
  cat <<EOF
SVP Generic Runner.

The \`sgr' utility provides a single interface to run a SVP program
compiled with \`slc'. \`sgr' analyses the executable file to determine
how to run the program, and invokes the simulator if needed.

Usage: $0 [OPTION] PROGRAM [ARGS]...

Options:
  -r runner      use the specified runner (use when autodetect fails)
  -x             show configuration string embedded in program (if any)
  -h, --help     print this help, then exit
  -v, --version  print version number, then exit

Examples:

  # show runner string stored in \`a.out':

  sgr -x a.out 

  # run fibo.x, possibly using the MT simulator:

  sgr fibo.x 

Report bugs and patches to the CSA group.
EOF
  exit 0
}

do_version() {
  rev='$Rev$'
  rev=$(echo "$rev"|cut -d' ' -f2)
  cat <<EOF
sgr $version.$rev

$copyright
All rights reserved.

Written by Raphael 'kena' Poss.
EOF
  exit 0
}


# Command line analysis
prev_arg=
show_embedded=
for arg in "$@"; do
  # if the previous option needs an argument, assign it
  if test -n "$prev_arg"; then
     eval "$prev_arg=\$arg"
     prev_arg=
     shift
     continue
  fi
  case $arg in
      -r)	prev_arg=runner; shift;;
      -x)	show_embedded=1; shift;;
      -v|--version)	do_version;;
      -h|--help)	do_usage;;
      --)  break;;
      -*) echo "$0: unrecognized command-line argument: $arg (try -h)" >&2; exit 1;;
      *)   break;;
  esac
done

program=$1
shift

# does the program exist?
if ! test -f "$program"; then
  echo "$0: no such file or directory: $program" >&2
  exit 127
fi

# is it executable?
if ! test -x "$program"; then
  echo "$0: permission denied: $program" >&2
  exit 126
fi

if test -n "$show_embedded" -o -z "$runner"; then
  tag=$(strings "$program"|grep '^sgr_runner:.*:'|tail -n1|cut -d: -f2)
  if test "x$tag" = "x"; then
    if test -n "$show_embedded"; then
       echo "(none found)"
       exit 0    
    fi
  else
    if test -n "$show_embedded"; then
       echo "$tag"
       exit 0    
    fi
  fi
fi

if test -z "$runner"; then
  # Not specified, use tag if found
  if test -n "$tag"; then
     runner=$tag
  else
     echo "$0: can't determine runner (try -r)" >&2
     exit 1
  fi
fi

# check it
runner_script=
IFS=:
for l in $slc_libdir; do
  if test -r "$l/r-$runner/run.sh"; then
     runner_script=$l/r-$runner/run.sh
     break
  fi
done
if test -z "$runner_script"; then
    echo "$0: $runner: cannot find runner script" >&2
    exit 1
fi

exec @BASH@ "$runner_script" "$program" "$@"

