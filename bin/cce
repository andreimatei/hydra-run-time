#! /bin/sh
# $Id$
set -e
root=$(cd $(dirname "$0") && pwd)
basename=$(basename "$0")
libdir=$(cd "$root"/../lib && pwd)
timestamp=$(echo '$Date$'|cut -d' ' -f2)
version=1

do_usage() {
  cat <<EOF
Usage: $0 [OPTION] DIALECT-ARCH-OS
       $0 [OPTION] ALIAS

Canonicalize a slc configuration name.

Operation modes:
  -s, --set-vars     print configuration variables for configuration
  -h, --help         print this help, then exit
  -t, --time-stamp   print date of last modification, then exit
  -v, --version      print version number, then exit

Example aliases for SVP implementations:

  utc0 seqc ptl ppp utcx ptlx
  seqc-mtalpha-sim ppp-mtsparc-sim

Report bugs and patches to the CSA Trac issue tracker, or to
<r.c.poss@.uva.nl>.
EOF
  exit 0
}

do_version() {
  rev='$Rev$'
  rev=$(echo "$rev"|cut -d' ' -f2)
  cat <<EOF
$basename $version.$rev ($timestamp)

This script is copyright (C) 2009 the CSA group - Universiteit
van Amsterdam.
EOF
  exit 0
}

do_timestamp() {
  echo "$timestamp"
  exit 0
}

die() {
  echo "$0:" "$@" >&2
  exit 1
}
  
# Command line analysis
alias=
set_vars=
describe=
check=
for arg in "$@"; do
   case $arg in
      -v|--version) do_version ;;
      -t|--timestamp) do_timestamp ;;
      -s|--set-vars) set_vars=1 ;;
      -h|--help) do_usage;;
      -*) echo "$0: unrecognized command-line argument: $arg (try -h)" >&2; exit 1;;
      *) alias=$arg
   esac
done
if test -z "$alias"; then do_usage; fi

# Expand one-word aliases to some arbitrary
# pre-defined configurations
case $alias in
   seqc)  alias=seqc-host-host-seqc ;;
   ptl)   alias=ptl-host-host-ptl ;;
   utc0)  alias=utc0-mtalpha-sim-proto ;;
   ppp)   alias=ppp-mtalpha-sim ;;
   ptlx)  alias=ptlx-x-x ;;
   utcx)  alias=utc-x-x ;;
   *-*)   ;; # more than one word: pass to next stage
   *)     # remaining single-word aliases
          die "$alias: unknown alias" ;;
esac

# Expand two-word aliases according to inventory
case $alias in
    *-*-*)   ;; # more than two word: pass to next stage
    *) 
	IFS='-' read dialect arch <<EOF
$alias
EOF
	case $alias in
	    utc0-*)
		alias=$alias-sim-proto
		;;
	    ppp-mt*)
		alias=$alias-sim
		;;
	    ptl-host)
		alias=$alias-host-ptl
		;;
	    seqc-host)
		alias=$alias-host-seqc
		;;
	    *)
		die "$alias: unknown alias" ;;
	esac
  ;;
esac

# Other cases
case $alias in
   *-*-*)
     # 3 or more parts, use them
     IFS='-' read slc_dialect slc_arch slc_os <<EOF
$alias
EOF
   ;;
   *) 
     # Any other form, unrecognized for now
     die "$alias: unknown alias" ;;
esac

slc_tag=$slc_dialect-$slc_arch-$slc_os

if test "x$set_vars" = x; then
    echo $slc_tag
    exit 0
fi

archvar=$(echo "$slc_arch"|tr a-z A-Z)
basearch=$(echo "$slc_arch"|cut -c3-)
basearchvar=$(echo "$basearch"|tr a-z A-Z)

# Language mode selection
case $slc_dialect in
    ptl)      slc_complang=cpp;;
    seqc|ppp) slc_complang=c;;
    utc*)     slc_complang=utc;;
    *) 
esac

# Transformation selection
case $slc_dialect-$slc_arch in
    utc*|seqc*|ptl*) slc_trans=$slc_dialect	;;
    ppp-*)           slc_trans=ppp$basearch ;;
esac
slc_trans=$libdir/slc/t-$slc_trans

# Compiler selection
case $slc_dialect-$slc_arch in
    *-x) slc_compiler=$root/scu ;;
    *-host)
	case $slc_complang in
	    cpp) slc_compiler=${CXX:-g++} ;;
	    c)   slc_compiler=${CC:-gcc} ;;
	    utc) die "no compiler for $dialect-$arch" ;;
	esac
	slc_filter=cp
	;;
    ppp-*)
	spp=$(echo "$root/spp" "$arch" $(eval "echo \${CC_$basearchvar:-$basearch-linux-gnu-gcc}"))
	slc_compiler="$spp compile"
	slc_filter="$spp filter"
	;;
    *-*)
	case $slc_complang in
	    cpp) slc_compiler=$(eval "echo \${CXX_$basearchvar:-$basearch-linux-gnu-g++}") ;;
	    c)   slc_compiler=$(eval "echo \${CC_$basearchvar:-$basearch-linux-gnu-gcc} -std=gnu99") ;;
	    utc) slc_compiler=$(eval "echo \${UTCC_$archvar:-$slc_arch-linux-gnu-gcc} -std=utc") ;;
	esac
	slc_filter=cp
	;;
	
esac

# Compiler flags selection; default to optimize
slc_cflags="$slc_cflags -O2"

# Assembler and linker selection
case $slc_complang-$slc_arch in
    *-x)      slc_aslink=$root/scu ;;
    cpp-host) slc_aslink=${CXX:-g++} ;;
    *-host)   slc_aslink=${CC:-gcc} ;;
    cpp-*)    slc_aslink=$(eval "echo \${CXX_$archvar:-$slc_arch-linux-gnu-g++}") ;;
    *-*)      slc_aslink=$(eval "echo \${CC_$archvar:-$slc_arch-linux-gnu-gcc}") ;;
esac

# Extra defines
case $slc_arch in
    mtalpha) ;;
    *)
	slc_ppflags="$slc_ppflags -DHAVE_C_DIVIDE"
	;;
esac

# Extra ldflags selection
case $slc_arch in
    mt*)
	slc_ldflags="$slc_ldflags -Wl,-Ttext -Wl,0 -nostdlib -nodefaultlibs"
	;;
    *)
	;;
esac

# OS selection
case $slc_os in
    x) ;;
    *) 
	osdir=$libdir/slc/$slc_arch-$slc_os
	slc_ppflags="$slc_ppflags -I$osdir/include"
	slc_ldflags="$slc_ldflags -L$osdir -lslos $osdir/crt.o"
	;;
esac

# Program entry selection
case $slc_os in
    host-ptl)
	slc_ldflags="$slc_ldflags -lpthread"
	;;
    *)  ;;
esac

set | grep '^slc_'




