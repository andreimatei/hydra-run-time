#! /bin/sh
# $Id$
set -e
root=$(cd $(dirname "$0") && pwd)
basename=$(basename "$0")
libdir=$(cd "$root"/../lib/slc && pwd)
timestamp=$(echo '$Date$'|cut -d' ' -f2)
version=1

do_usage() {
  cat <<EOF
Usage: $0 [OPTION] PROGRAM [ARGS]...

Run a compiled SVP program.

Options:
  -r runner      Use the specified runner.

  -x             Show configuration string embedded in program (if any).

  -h, --help     Print this help, then exit.

  -v, --version  Print version number, then exit.

Report bugs and patches to the CSA Trac issue tracker, or to
<r.c.poss@.uva.nl>.
EOF
  exit 0
}

do_version() {
  rev='$Rev$'
  rev=$(echo "$rev"|cut -d' ' -f2)
  cat <<EOF
$basename $version.$rev

This script is copyright (C) 2009 the CSA group - Universiteit
van Amsterdam.
EOF
  exit 0
}


# Command line analysis
prev_arg=
show_embedded=
for arg in "$@"; do
  # if the previous option needs an argument, assign it
  if test -n "$prev_arg"; then
     eval "$prev_arg=\$arg"
     prev_arg=
     shift
     continue
  fi
  case $arg in
      -r)	prev_arg=runner; shift;;
      -x)	show_embedded=1; shift;;
      -v|--version)	do_version;;
      -h|--help)	do_usage;;
      --)  break;;
      -*) echo "$0: unrecognized command-line argument: $arg (try -h)" >&2; exit 1;;
      *)   break;;
  esac
done

program=$1
shift

# does the program exist?
if ! test -f "$program"; then
  echo "$0: no such file or directory: $program" >&2
  exit 127
fi

# is it executable?
if ! test -x "$program"; then
  echo "$0: permission denied: $program" >&2
  exit 126
fi

if test -n "$show_embedded" -o -z "$runner"; then
  tag=$(strings "$program"|grep '^sgr_runner:.*:'|tail -n1|cut -d: -f2)
  if test "x$tag" = "x"; then
    if test -n "$show_embedded"; then
       echo "(none found)"
       exit 0    
    fi
  else
    if test -n "$show_embedded"; then
       echo "$tag"
       exit 0    
    fi
  fi
fi

if test -z "$runner"; then
  # Not specified, use tag if found
  if test -n "$tag"; then
     runner=$tag
  else
     echo "$0: can't determine runner (try -r)" >&2
     exit 1
  fi
fi

# check it
if ! test -x "$libdir/r-$runner"; then
    echo "$0: unknown runner: $runner" >&2
    exit 1
fi

exec "$libdir/r-$runner" "$program" "$@"

