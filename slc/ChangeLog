2009-08-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Improve global memory allocation.

	This changeset introduces a set of `fast_' wrappers around memory
	allocation functions toavoid an intermediary function context to
	reach their respective algorithm. This was suggested by Chris
	Jesshope. Also increase the `malloc' pool by larger chunks, so
	that pool extension happens less often.
	
	* lib/src/callgate.h: Rename to...
	* lib/include/svp/callgate.h: ...here. Simplify.

	* lib/include/cmalloc.h: Provide wrappers.
	
	* lib/src/malloc_wrappers.c: Simplify by using the wrappers.
	
	* lib/mtalpha.mk,	
	* lib/src/malloc_intrinsics.c: Make the page size bigger, so that
	`malloc' increases its pool by bigger chunks.

2009-08-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Complete support for C's (non-standard) `alloca'.

	Since `alloca' is merely play on the stack pointer and the frame
	pointer everything was in place except the declaration of the name
	`alloca' itself. This changeset provides a header for this
	purpose.
	
	* lib/include/calloca.h: New.
	
	* lib/include/sac_helpers.h: Add `safe_free()', which calls
	`free()' if and only if it detects its argument is not the result
	of `alloca'. This is non-portable (Microgrid only).

2009-08-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	MT-Alpha ISA change: `allocate' takes the place identifier as input.

	Creates using the default place must flush the register passed to
	`allocate'. `setplace' disappears.

	* tools/lib/t-pppalpha/include/sl_support.h,
	* tools/lib/mtalpha-sim/main.c,
	* lib/src/callgate.h,
	* lib/src/mtalpha/mtdiv.s,
	* tools/bin/spp (pppalpha.create, pppalpha.remdefaults,
	pppalpha.rewritejsr): Pass the place identifier as input to
	`allocate'. Do not use `setplace' any more.

	* tools/bin/spp (pppalpha.addswchll): Recognize that `allocate'
	reads its parameter. Also recognize that `clr' and `fclr' make the
	target register immediately available for reading.
	
2009-08-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix packaging. This allows `make distcheck' to succeed.

	* build-aux/Makefile.am: Distribute `sl-init-autoconf'.

	* tools/bin/Makefile.am: Fix manpage dependencies to please
	`distcleancheck'.

2009-08-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fixes.
	
	* build-aux/slc.m4: Fail if the SL tools cannot be found. Use
	`sl-core' instead of `slc' to fetch installed files from.

2009-08-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Make package more reusable for other trees.

	There are two ways the parts of the source tree can be used:
	either together as sub-trees of the "base" package, or
	independently of the base package after the `sl-core' package was
	installed somewhere on the system.

	In the former case the tools and makefile rules can be picked up
	relative to the directory where they are reused; in the latter
	case they must pick them up from some agreed-upon install
	location.

	The new `sl-init-autoconf' script implements this protocol by
	fetching the aclocal and Makefile rules (.mk) from the "nearest"
	location, either a source tree "nearby" (next to the
	`sl-init-autoconf' script itself) or from the install locations.

	* build-aux/sl-init-autoconf: New.
	
	* build-aux/Makefile.am: Install `sl-init-autoconf'. Also install
	the `.mk' files to some location where `sl-init-autoconf' can find
	them.

	* Makefile.am: Recurse into `build-aux'.
	
2009-08-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Rename the package to `sl-core'.

	* configure.ac: Change package name.

2009-08-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* ChangeLog: initialize.

See `ChangeLog.1' for earlier changes.

