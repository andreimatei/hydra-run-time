2010-05-19  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Migrate `spp' to the new framework.

	* tools/bin/spp: Use the new framework.
	* tools/lib/slc/mtalpha/spp.py: Remove, obsoleted by `spp'.

	* tools/lib/t-ppp2alpha/slimpl.m4: Adjust parameter declarations
	for the new syntax required by `spp'.

2010-05-19  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor API improvement.

	* tools/lib/slc/msg.py: Allow to use `warn' and `log' without context. 

2010-05-19  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Merge CM4 into new framework.

	* tools/bin/cm4.in: Copy functionality to...
	* tools/lib/slc/input/cm4.py: ... here.

	* tools/bin/cm4.in: Handle parameters `-P' and `-fcm4-trace'.
	* tools/bin/slc.in: Use the new parameters.

2010-05-17  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Move forward with the new code transformation framework.

	* tools/lib/slc/ast.py: Introduce nodes for C types, typedefs and
	typedef uses.

	* tools/lib/slc/visitors.py: Introduce default visits for the new
	nodes.

	* tools/lib/slc/lower/lowccast.py,
	* tools/lib/slc/lower/lowcvars.py,
	* tools/lib/slc/lower/rename.py: Adapt to use the new type nodes.

	* tools/lib/slc/lower/seq.py,
	* tools/lib/slc/mtalpha/visitors.py: Use the new type nodes for
	the function pointers and memargs structure. Adapt function
	parameter declarations.

	* tools/lib/slc/lower/lowercreate.py: Emit line number before
	assignment of exit code.

2010-05-16  Raphael 'kena' Poss  <r.c.poss@uva.nl>
	
	Move forward with the new code transformation framework.

	Framework usability improvements:

	* tools/lib/slc/ast.py (Item): Implement `+' for items to simplify
	block composition.

	* tools/lib/slc/ast.py (Block): Allow to instanciate with only one
	item. Convert plain strings to opaques.

	* tools/bin/spr: Move specification of stages to a data
	structure. Output intermediate results to files.

	New features:

	* tools/lib/slc/ast.py: Introduce nodes for C variable
	declarations and uses; C labels and gotos; cast expressions, and
	subscript operations.

	* tools/lib/slc/visitors.py: Introduce default visits for the new
	nodes. New `ScopedVisitor'.

	* tools/bin/spr (Dispatcher),
	* tools/lib/slc/visitors.py (BaseVisitor): Merge state of split
	visitors (alias `__dict__' between dispatcher and alternates).

	* tools/lib/lower/rename.py,
	* tools/lib/lower/lowccast.py,
	* tools/lib/lower/lowclabels.py,
	* tools/lib/lower/lowcvars.py,
	* tools/lib/lower/remflavors.py: New stages. 

	Changes:

	* tools/bin/spr: Use the new stages.

	* tools/lib/input/check.py: Ensure `break' and `end_thread' do not
	appear within create/sync. Keep track of relation between `create'
	and scopes.

	* tools/lib/slc/ast.py: Simplify `LowCreate'. Remove
	`LowCreateArg'. Move `funtype' to `Create'.

	* tools/lib/slc/visitors.py,
	* tools/lib/slc/lower/split.py,
	* tools/lib/slc/lower/seq.py,
	* tools/lib/slc/mtalpha/visitors.py: Update accordingly. Improve
	algorithms. Fix false duplication of C variable declarations in
	split.

	* tools/lib/lower/flavorseta.py: New. Annotate `SetA' with the
	relevant references to `LowCreate'.

	* tools/lib/lower/seq.py,
	* tools/lib/mtalpha/visitors.py: Use the annotations in
	`visit_seta'.

	* tools/lib/lower/lowgeta.py: Use the new syntax for lowering.

	Minor code cleanups:

	* tools/lib/slc/ast.py (Item): Remove `Item.clone' (never used).
	* tools/lib/slc/ast.py (Block): Remove `indexname' (now unused).
	* tools/lib/slc/ast.py: Remove `FunDeclPtr' (not yet used).

	* tools/lib/slc/lower/seq.py,
	* tools/lib/slc/mtalpha/visitors.py: Remove `visit_geta' (now
	handled by ReduceGetA).

2010-05-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor whitespace handling improvements.

	* tools/lib/slc/input/parse.py (parse_block): Ignore chunks of C text
	with only horizontal whitespace.

	* tools/lib/t-spr/slimpl.m4: Force `#line' at the start of a C block.

2010-05-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Implement tree checking.

	* tools/lib/slc/ast.py,
	* tools/lib/slc/visitors.py: Introduce a `decl' part in scopes.

	* tools/lib/slc/input/check.py: New.

	* tools/bin/spr: Use the tree checker.

	* tools/lib/Makefile.am: List the new file.

2010-05-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Introduce support for scopes, free index declarations.

	* tools/bin/cm4.in: Escape `{' and `}' to `sl_lbr' and `sl_rbr'.

	* tools/lib/t-spr/slimpl.m4,
	* tools/lib/slc/ast.py,
	* tools/lib/slc/input/parse.py: Introduce scopes and parse them.

	* tools/lib/visitors.py: Handle scopes.

	* tools/lib/slc/ast.py: Introduce node for index declarations.

	* tools/lib/slc/visitors.py,
	* tools/lib/slc/input/parse.py,
	* tools/lib/slc/lower/seq.py,
	* tools/lib/slc/mtalpha/visitors.py: Handle individual index
	declaration nodes. Simplify block handling accordingly.

	* tools/bin/spr: Move final lowering of `sl_geta' to...
	* tools/lib/slc/lower/lowgeta.py: ...here.

	* tools/lib/Makefile.am: List the new file.

2010-05-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Reach prototype of the deadlock avoidance scheme.

	* tools/bin/spr: Move file reading and parsing to...

	* tools/lib/input/read.py,
	* tools/lib/input/parse.py: ...here.

	* tools/bin/spr: Move MT-Alpha visitors to...

	* tools/lib/mtalpha/visitors.py: ...here.

	* tools/lib/ast.py: Introduce flavors. Move dispatch mechanisms
	to...
	* tools/lib/visitors.py: ...here.

	* tools/lib/lower/split.py: Implement code duplication using
	flavors.

	* tools/lib/lower/seq.py: Update accordingly.

	* tools/lib/Makefile.am: List the new files.

	* tools/lib/lower/lowercreates.py: Fix typo (missing closing paren).

	* tools/bin/spr: Use the new mechanisms.

2010-05-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Refactor `spr' and introduce intermediate create lowering.

	* tools/bin/spr,
	* tools/lib/slc/ast.py: Kill definitions and uses of the
	`fid_lvalue'.

	* tools/lib/slc_config.py.in,
	* tools/lib/slc/lower/__init__.py,
	* tools/lib/slc/input/__init__.py: New.

	* tools/bin/spr: Extract visitor definitions to...
	* tools/lib/slc/visitors.py,
	* tools/lib/slc/lower/seq.py: ... here.

	* tools/lib/slc/ast.py: New `LowCreate' and `LowCreateArg' nodes.
	* tools/lib/slc/lower/lowercreate.py: New.

	* tools/lib/slc/lower/seq.py: Simplify by using the result of
	create lowering.
	
	* tools/lib/Makefile.am: List the new files.
	
	* tools/bin/spr: Test the new lowering.

2010-05-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Refactor `spp' and `spr'.

	Since some features from `spp' and `spr' are shared, and `spr' is
	deemed to grow larger, split them as an installable Python library
	tree.

	* tools/bin/spr: Extract location definitions and AST nodes to...
	* tools/lib/slc/loc.py: ... here,
	* tools/lib/slc/lex.py: ... here, and ...
	* tools/lib/slc/ast.py: ... here. Refactor as needed.

	* tools/bin/spr: Extract register magic to...
	* tools/lib/slc/mtalpha/regmagic.py: ... here.

	* tools/lib/slc/__init__.py,
	* tools/lib/slc/mtalpha/__init__.py,
	* tools/lib/slc/mtalpha/asmproc/__init__.py: New.

	* tools/bin/spp: Split into...

	* tools/lib/slc/msg.py,
	* tools/lib/slc/mtalpha/spp.py,
	* tools/lib/slc/mtalpha/compile.py,
	* tools/lib/slc/mtalpha/asmproc/base.py,
	* tools/lib/slc/mtalpha/asmproc/common.py,
	* tools/lib/slc/mtalpha/asmproc/opt.py: ... this. Refactor as needed.

	* tools/lib/Makefile.am (nobase_python_PYTHON): List the new
	files.

2010-05-01  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Move forward with the new code transformation framework.

	* tools/bin/spr: Implement the transform of creates to MT-Alpha.

2010-04-30  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Move forward with the new code transformation framework.

	* tools/bin/spr: Implement the transform of thread function
	definitions to MT-Alpha thread functions (not creates). Introduce
	indirection through dispatcher in visitor for future
	alternate dispatch.

2010-04-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Move forward with the new code transformation framework.

	* tools/lib/t-spr/slimpl.m4: Define `sl_break'.

	* tools/bin/spr: Modify visitor framework to allow stages to
	replace the node they are visiting with something else. Implement
	the transforms to sequential execution.

2010-04-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Introduce `spr'.

	* tools/bin/spr: New.

	* tools/lib/t-spr/slimpl.m4: Preserve backslashes in C text.

2010-04-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Prepare for new code splitting tool `spr'.

	* tools/lib/t-spr/slimpl.m4: Implement macros that split the code.
	* tools/lib/t-spr/include/sl_support.h: Placeholder to please `slc'.

	* tools/bin/cce.in: Make `t-spr' usable for tests.

2010-04-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* doc/NEWS.txt: Initialize for 2.4.x.

2010-04-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Release version 2.4.

	* build-aux/package-version: Update to 2.4.

	* doc/NEWS.txt: Document recent changes.

2010-04-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Update copyright notice of files changed in 2010.

	* build-aux/sl.mk,
	* build-aux/slctests.mk,
	* lib/Makefile.am,
	* lib/include/cmalloc.h,
	* lib/include/cstdio.h,
	* lib/include/ctime.h,
	* lib/include/svp/assert.h,
	* lib/include/svp/callgate.h,
	* lib/include/svp/io.h,
	* lib/include/svp/iomacros.h,
	* lib/include/svp/sep.h,
	* lib/mtalpha-sim/include/svp_asmdiv.h,
	* lib/src/abort.c,
	* lib/src/heap.c,
	* lib/src/malloc_wrappers.c,
	* lib/src/mtsep.c,
	* lib/src/perf.c,
	* tools/bin/Makefile.am,
	* tools/bin/cce.in,
	* tools/bin/slc.in,
	* tools/bin/spp,
	* tools/include/m4sugar_foreach.m4,
	* tools/include/m4sugar_version.m4,
	* tools/include/svp/testoutput.h,
	* tools/lib/Makefile.am,
	* tools/lib/host-host-ptl/include/ptl_config.h,
	* tools/lib/host-host-ptl/include/ptl_debug.h,
	* tools/lib/host-host-ptl/include/ptl_deps.h,
	* tools/lib/host-host-ptl/include/ptl_vars.h,
	* tools/lib/host-host-ptl/ptl_debug.cc,
	* tools/lib/host-host-ptl/ptl_vars.cc,
	* tools/lib/mtalpha-sim/callgate.s,
	* tools/lib/t-ppp2alpha/include/sl_support.h,
	* tools/lib/t-pppalpha/include/sl_support.h: Add 2010 to copyright notice.

2010-04-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Remove support for `sl_funcall'.

	The construct `sl_funcall' was obsolete for a while already.

	* tools/lib/t-utc/slimpl.m4,
	* tools/lib/t-utc0/slimpl.m4,
	* tools/lib/t-ptl/slimpl.m4,
	* tools/lib/t-pppalpha/slimpl.m4,
	* tools/lib/t-ppp2alpha/slimpl.m4: Remove `sl_funcall' and `sl_farg'.

2010-04-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Support `sl_create' inside plain C functions.

	The MT-Alpha target now support the construct; this changeset
	extends the functionality to the sequential C target.

	* tools/lib/t-seqc/slimpl.m4: Deprecate `sl_kill'. Implement new
	`sl_break' semantics (not yet official). This removes the need for
	a linked list of family contexts, so a new child can appear
	disconnected. This allows `sl_create' to appear inside plain C
	functions.

	* tools/lib/t-seqc/include/sl_support.h: Remove the obsolete field.

2010-04-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Adjust place usage in current MT-alpha delegations.

	A new feature was added to the hardware to select the behavior of
	`allocate' using a bit in the place identifier. When the bit is
	*not* set, upon failure allocate returns FID 0. This will be used
	later during automatic deadlock prevention. However, since the
	current code assumes allocate always returns a valid FID, the bit
	needs to be set everywhere for now.

	* lib/include/cstdlib.h,
	* lib/mtalpha-sim/include/svp_asmdiv.h,
	* lib/src/mtalpha/mtdiv.s,
	* lib/src/mtsep.c,
	* tools/bin/spp,
	* tools/lib/t-ppp2alpha/include/sl_support.h: Set bit 3 of place identifiers.

2010-04-07  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in MT-alpha code generation.

	* tools/lib/t-ppp2alpha/include/sl_support.h: Ensure that the read
	to a shared after sync completes in all cases. This is needed in case
	the `gets' instruction is followed by `ldq' with the same register
	as target ("cannot write to waiting register").

2010-04-07  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix handling of `slr' argument.

	The `slr' utility needs to recompile code using the same back-end
	as the executed program. This is recognized by a text tag.

	* tools/lib/mtalpha-sim/slrt.s (slr_datatag): Upgrade data tag
	to new back-end name.

2010-04-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in MT-alpha code generation.

	* tools/bin/spp,
	* tools/lib/t-ppp2alpha/include/sl_support.h: Cast global or
	shared argument to desired type before passing to `asm' statement,
	so that constant `0' can be passed as a floating point.

2010-04-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Increase use of `-b mtalpha'.

	* build-aux/slctests.mk,
	* build-aux/sl.mk (SLC_BEFORE): Use `-b mtalpha' instead of `-b
	ppp' to build programs.

2010-04-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Optimize the MT-alpha calling convention.

	The calling convention was expecting PV to be present in some
	global thread parameter in order to place `ldgp' (or `ldah,lda
	!gpdisp') immediately at the start of the thread code. This
	required to pass PV in a global thread argument even if it was
	potentially not used in the target created family.

	This is now optimized by computing PV in the threads that need it,
	through the Alpha `br' instruction (`br $pv, 0' loads the PV of
	the next instruction into $pv), now aliased to `ldpc' in the
	assembler.

	* tools/bin/spp (ppp2alpha): Handle the new calling convention.

	* tools/lib/t-ppp2alpha/include/sl_support.h,
	* tools/include/svp/gomt.h: Avoid passing PV, since it is no
	longer needed.

2010-04-01  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Adapt library for new code generation.

	* tools/bin/cce.in: Obsolete the short aliases `ppp' and `ppp2'.

	* tools/include/svp/gomt.h,
	* lib/include/svp/callgate.h,
	* lib/src/mtalpha/mtdiv.s,
	* lib/mtalpha-sim/include/svp_asmdiv.h: Use the new allocate/create
	mechanism.

	* tools/bin/spp,
	* tools/lib/t-ppp2alpha/include/sl_support.h: Use `wmb', not `wb'.

	* tools/lib/t-ppp2alpha/include/sl_support.h: `allocate' has side
	effects, so make it `volatile'.

	* lib/mtalpha.mk,
	* tools/lib/mtalpha.mk: List the new files. Use `mtalpha' instead
	of `ppp' as target.

2010-04-01  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Implement code generation for new back-end `ppp2'.
	
	* tools/bin/cce.in: Enable `-fwesley' by default for target
	`ppp2'.

	* tools/lib/t-ppp2alpha/slimpl.m4,
	* tools/lib/t-ppp2alpha/include/sl_support.h,
	* tools/bin/spp: Implement.

2010-03-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Initialize new MT-alpha back-end `ppp2'.

	* tools/bin/cce.in: Recognize `ppp2'.

	* tools/bin/spp (ppp2alpha): Initialize new target class.

	* tools/lib/t-pppalpha/slimpl.m4,
	* tools/lib/t-pppalpha/include/sl_support.h: Copy to...

	* tools/lib/t-ppp2alpha/slimpl.m4,
	* tools/lib/t-ppp2alpha/include/sl_support.h: ... here.

2010-03-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the MT-alpha back-end.

	* tools/lib/t-pppalpha/include/sl_support.h: Implement a new
	"write-to-shared" macro that forces the value to be present
	in a temporary before it is written to the shared register.

	* tools/bin/slc.in: New option `-fwesley' that enables the new
	handling of shared parameters.

	* tools/bin/spp: New filter that ensures that `mov' instructions
	operating on floating point registers are renamed to fmov.

2010-03-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Update documentation.

	* doc/HACKING.txt: Reflect latest ChangeLog practices.

2010-02-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* tools/lib/Makefile.am (nobase_dist_pkgdata_DATA): List the new
	profiles.

2010-02-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Remove support for `slr -C', now replaced by `slr -m'.

	"Forcing COMA" makes no sense when there are multiple
	COMA implementations available. Let profiles select.

	* tools/bin/slr.in,
	* tools/lib/r-mt-sim.sh.in: Drop support for `-C', `-Cc' and
	`-Cd'.

	* tools/lib/mt-profiles/lzcoma_default,
	* tools/lib/mt-profiles/mlcoma_default: New.

	* build-aux/slctests.mk: Use the new COMA profiles for testing.

2010-02-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Cosmetic fix to `slr'.

	* tools/lib/r-mt-sim.sh.in: Silence program initialization for
	recursive calls.

2010-02-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend simulator profiles.

	* tools/lib/mt-profiles/coma128: Symlink to...
	* tools/lib/mt-profiles/lzcoma128_2chan: ...here. Fix sizes and timings.

	* tools/lib/mt-profiles/coma256: Symlink to...
	* tools/lib/mt-profiles/lzcoma256_2chan: ...here. Fix sizes and timings.

	* tools/lib/mt-profiles/zlcoma128_1chan,
	* tools/lib/mt-profiles/zlcoma256_1chan,
	* tools/lib/mt-profiles/mlcoma128_1chan,
	* tools/lib/mt-profiles/mlcoma256_1chan: New.

	* tools/lib/mt-profiles/ml-npcrypt-p1,
	* tools/lib/mt-profiles/ml-npcrypt-p2,
	* tools/lib/mt-profiles/ml-npcrypt-p4,
	* tools/lib/mt-profiles/ml-npcrypt-p8: Update descriptions.

	* tools/lib/mt-profiles/rmb1,
	* tools/lib/mt-profiles/rmb4,
	* tools/lib/mt-profiles/rmb8,
	* tools/lib/mt-profiles/rmb128,
	* tools/lib/mt-profiles/rmb256: Rename to...
	* tools/lib/mt-profiles/rbm1,
	* tools/lib/mt-profiles/rbm4,
	* tools/lib/mt-profiles/rbm8,
	* tools/lib/mt-profiles/rbm128,
	* tools/lib/mt-profiles/rbm256: ...here. Fix timings.

	* tools/lib/mt-profiles/simple,
	* tools/lib/mt-profiles/default: Update symlink after renaming.

	* tools/lib/Makefile.am: Update accordingly.

2010-02-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the system initialization code.

	* lib/src/mtconf.h,
	* lib/src/mtconf.c: New. This reads extra configuration data from
	the simulator, when present.

	* lib/src/mtinit.c: Also call `sys_conf_init()'. Make
	initialization verbose, unless disabled by environment
	variable. Rename init routines with `sys_' prefix.

	* tools/lib/mtalpha-sim/slrt.s: Use the new name `sys_init'.

	* lib/src/mtsep.c,
	* lib/src/heap.c: Make this verbose too.

	* lib/src/heap.h: New.

	* lib/include/svp/sep.h: Expose the number of family table entries
	and thread entries in `struct placeinfo'.
	* lib/src/mtsep.c: Initialize the extra fields.

	* lib/mtalpha.mk: List the new files.

2010-02-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.

	This fixes the following issue: if `configure' was run after a
	first build and picks up new locations for tools (simulator,
	compilers, etc), the SL scripts `cce', `slr' etc would not be
	regenerated to reflect the new locations. (Thanks to A. Matei)

	* tools/lib/Makefile.am,
	* tools/bin/Makefile.am: Re-generate scripts when `Makefile'
	changes, not only `Makefile.am'.

2010-02-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor cosmetic fix in `slr'.

	* tools/bin/slr.in: Enhance output of `-m list'.

2010-02-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* doc/NEWS.txt: Initialize for 2.3.x.

2010-02-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Release version 2.3.

	* build-aux/package-version: Update to 2.3.

	* doc/NEWS.txt: Document recent changes.

2010-02-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.

	* lib/src/gdtoa/README: New. (was listed but not imported)

2010-02-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.

	* build-aux/Makefile.am: Ensure that the script `version-gen'
	becomes executable upon installation.

2010-02-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add option `--disable-check-coma' for other packages.

	Since the COMA simulation may need to be avoided even if
	available, provide a flag to disable it explicitly.

	* build-aux/slctests.m4: Support new flag.

2010-02-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Small optimization in run-time library.

	* tools/include/svp/testoutput.h: Output using `unsigned
	char'. (saves one instruction on Alpha)

2010-02-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend and improve the SL standard library.

	* lib/include/cassert.h,
	* lib/include/cstdio.h,
	* lib/include/sys/ctypes.h: New.
	* lib/Makefile.am: Update accordingly.

	* lib/include/svp/assert.h,
	* lib/include/svp/io.h,
	* lib/include/svp/iomacros.h: Deprecate.

	* lib/src/mtsep.c: Use the new API.

	* lib/include/cerrno.h,
	* lib/include/cstdlib.h,
	* lib/include/cstring.h: Extend.

	* lib/include/ctime.h: Find `clock_t' in <sys/ctypes.h>.

	* lib/src/malloc_intrinsics.h: Remove.
	* lib/src/malloc_intrinsics.c: Remove. Contents in...
	* lib/src/heap.c: ...here, and...
	* lib/src/abort.c: ...here.
	# lib/src/malloc.c: Update accordingly.

	* lib/src/gdtoa/arith-mtalpha.h,
	* lib/src/gdtoa/arith.h,
	* lib/src/gdtoa/arithchk.c,
	* lib/src/gdtoa/dmisc.c,
	* lib/src/gdtoa/dtoa.c,
	* lib/src/gdtoa/g_Qfmt.c,
	* lib/src/gdtoa/g__fmt.c,
	* lib/src/gdtoa/g_ddfmt.c,
	* lib/src/gdtoa/g_dfmt.c,
	* lib/src/gdtoa/g_ffmt.c,
	* lib/src/gdtoa/g_xLfmt.c,
	* lib/src/gdtoa/g_xfmt.c,
	* lib/src/gdtoa/gd_qnan-mtalpha.h,
	* lib/src/gdtoa/gd_qnan.h,
	* lib/src/gdtoa/gdtoa.c,
	* lib/src/gdtoa/gdtoa.h,
	* lib/src/gdtoa/gdtoa_fltrnds.h,
	* lib/src/gdtoa/gdtoaimp.h,
	* lib/src/gdtoa/gethex.c,
	* lib/src/gdtoa/gmisc.c,
	* lib/src/gdtoa/hd_init.c,
	* lib/src/gdtoa/hexnan.c,
	* lib/src/gdtoa/makefile,
	* lib/src/gdtoa/misc.c,
	* lib/src/gdtoa/qnan.c,
	* lib/src/gdtoa/smisc.c,
	* lib/src/gdtoa/strtoIQ.c,
	* lib/src/gdtoa/strtoId.c,
	* lib/src/gdtoa/strtoIdd.c,
	* lib/src/gdtoa/strtoIf.c,
	* lib/src/gdtoa/strtoIg.c,
	* lib/src/gdtoa/strtoIx.c,
	* lib/src/gdtoa/strtoIxL.c,
	* lib/src/gdtoa/strtod.c,
	* lib/src/gdtoa/strtodI.c,
	* lib/src/gdtoa/strtodg.c,
	* lib/src/gdtoa/strtodnrp.c,
	* lib/src/gdtoa/strtof.c,
	* lib/src/gdtoa/strtopQ.c,
	* lib/src/gdtoa/strtopd.c,
	* lib/src/gdtoa/strtopdd.c,
	* lib/src/gdtoa/strtopf.c,
	* lib/src/gdtoa/strtopx.c,
	* lib/src/gdtoa/strtopxL.c,
	* lib/src/gdtoa/strtorQ.c,
	* lib/src/gdtoa/strtord.c,
	* lib/src/gdtoa/strtordd.c,
	* lib/src/gdtoa/strtorf.c,
	* lib/src/gdtoa/strtorx.c,
	* lib/src/gdtoa/strtorxL.c,
	* lib/src/gdtoa/sum.c,
	* lib/src/gdtoa/ulp.c: Import from FreeBSD. This provides
	`dtoa'/`strtod', etc.
	* lib/gdtoa.mk: New.

	* lib/src/dtoa_simple.c: Provide alternative `dtoa' since the
	gdtoa code seems to have FP issues on the MG simulator at this
	point.

	* lib/src/floatio.h,
	* lib/src/fpmath.h,
	* lib/src/_hdtoa.c,
	* lib/src/fprintf.c,
	* lib/src/perror.c,
	* lib/src/printf-pos.c,
	* lib/src/printf.c,
	* lib/src/printfcommon.h,
	* lib/src/printflocal.h,
	* lib/src/sprintf.c,
	* lib/src/strcat.c,
	* lib/src/strerror.c,
	* lib/src/strlcat.c,
	* lib/src/strlcpy.c,
	* lib/src/strncat.c,
	* lib/src/strnlen.c,
	* lib/src/vfprintf.c: Import from FreeBSD. Use `dtoa_simple' in
	printf's `%f', etc. for now.

	* lib/src/mtstdio.h,
	* lib/src/mtstdio.c: Provide barebones stdio FILEs.

	* lib/src/fputc.c,
	* lib/src/fputs.c,
	* lib/src/putc.c,
	* lib/src/putchar.c,
	* lib/src/puts.c,
	* lib/src/fwrite.c,
	* lib/src/snprintf.c,
	* lib/src/vsnprintf.c,
	* lib/src/vprintf.c: Provide more I/O primitives from the basic
	FreeBSD implementations.

	* lib/src/sys_errlist.c,
	* lib/src/bcopy.c: New. (dependencies to printf/perror)

	* lib/mtalpha.mk: List the new files.

2010-02-07  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Improve `slr'.

	* tools/bin/slr.in: Fix support for '][' in Fibre input.

	* tools/lib/r-mt-sim.sh.in: Avoid the symbol table generation and
	do not set COMA when running recursively (i.e. when dumping input
	data).

2010-02-07  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add support for program symbol tables in MGSim.
	
	* build-aux/mgbinutils.m4: Also detect the `nm' utility.
	* tools/lib/Makefile.am: Propagate `nm' to `r-mt-sim.sh.in'.	
	* tools/lib/r-mt-sim.sh.in: Generate and pass program symbol table
	to simulator.

2010-02-05  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Expose initial place to programs.

	* lib/src/mtsep.c (sep_init): Initialize `__main_place_id' and
	`__main_placeinfo'.

2010-01-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in `slr -m'.

	* tools/lib/r-mt-sim.sh.in: Fix handling of custom profiles in
	`~/.mt-profiles'.

2010-01-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Upgrade the mutc-ptl back-end.

	* tools/lib/host-host-ptl/include/create.tpl,
	* tools/lib/host-host-ptl/include/ptl_svp.h,
	* tools/lib/host-host-ptl/include/template.pl,
	* tools/lib/host-host-ptl/ptl_svp.cc: Update to latest utc-ptl
	code.

	* tools/lib/host-host-ptl/include/ptl_config.h,
	* tools/lib/host-host-ptl/include/ptl_debug.h,
	* tools/lib/host-host-ptl/include/ptl_deps.h,
	* tools/lib/host-host-ptl/include/ptl_svp.h,
	* tools/lib/host-host-ptl/include/ptl_vars.h,
	* tools/lib/host-host-ptl/include/template.pl,
	* tools/lib/host-host-ptl/ptl_debug.cc,
	* tools/lib/host-host-ptl/ptl_svp.cc,
	* tools/lib/host-host-ptl/ptl_vars.cc: Strip license text as it
	has not been decided yet.

2010-01-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix the MT profiles.

	* tools/lib/mt-profiles/coma128,
	* tools/lib/mt-profiles/coma256,
	* tools/lib/mt-profiles/ml-npcrypt-p1,
	* tools/lib/mt-profiles/ml-npcrypt-p2,
	* tools/lib/mt-profiles/ml-npcrypt-p4,
	* tools/lib/mt-profiles/ml-npcrypt-p8,
	* tools/lib/mt-profiles/rmb1,
	* tools/lib/mt-profiles/rmb128,
	* tools/lib/mt-profiles/rmb256,
	* tools/lib/mt-profiles/rmb4,
	* tools/lib/mt-profiles/rmb8: Use $simargs_base to define the
	number of cores since NCORES is not used any more.

2010-01-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix call gate to C functions.

	* tools/lib/mtalpha-sim/callgate.s: Use $15 (FP) to carry over the
	pointer to the memory location for return values, instead of $14
	which may be overwritten by the callee

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Update documentation.

	* doc/NEWS.txt: Update changes since 2.2.

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.

	* lib/Makefile.am: List `cerrno.h' and `undocumented.h'.

	* lib/mtalpha.mk: Clean up more objects..

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Repurpose option -n of `slr'.

	* tools/bin/slr.in,
	* tools/lib/r-mt-sim.sh.in: Change handling of option `-n' to set
	environment variable `SLR_NCORES' instead of overriding the place
	configuration.

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	New feature: automatic delegation of `t_main'.

	If the environment variable `SLR_NCORES' is set and non-zero, a
	place of that number of cores is allocated upon program start-up
	and used to delegate creation the program's top-level thread
	`t_main'. This achieves transparent reconfiguration of the number
	of cores a program is being run on without explicit use of the SEP
	in the program.

	* tools/include/svp/gomt.h: Capture the construct that allows to
	create a family of one thread from plain C mode in a macro
	`INVOKE_MT'.
	* tools/Makefile.am: List the new file.

	* lib/src/mtinit.c: Move definition of `environ' to ...
	* tools/lib/mtalpha-sim/slrt.s: ...here.

	* tools/lib/mtalpha-sim/slrt.s: New global objects
	`__main_place_id' and `__main_placeinfo'.

	* lib/src/mtinit.c: Use `SLR_NCORES' (if set) to initialize
	`__main_place_id' and `__main_placeinfo' using the SEP.

	* tools/lib/mtalpha-sim/main.c: Use `__main_place_id' to delegate
	creation of `t_main'.

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the SL standard library.

	* lib/include/cstdarg.h: New.
	* lib/Makefile.am: Update accordingly.

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	More C99 compatibility.

	* lib/include/undocumented.h,
	* lib/include/cmalloc.h: Move declarations into...

	* lib/include/cstring.h,
	* lib/include/cstdlib.h: ...here.

	* lib/include/sac_helpers.h: Update accordingly.
	* lib/Makefile.am: List the new headers.

	* lib/include/cmalloc.h: Deprecate.

	* lib/src/atoi.c,
	* lib/src/atol.c,
	* lib/src/atoll.c,
	* lib/src/getenv.c,
	* lib/src/malloc_wrappers.c,
	* lib/src/mtinit.c,
	* lib/src/perf.c,
	* lib/src/stpcpy.c,
	* lib/src/stpncpy.c,
	* lib/src/strchr.c,
	* lib/src/strcpy.c,
	* lib/src/strdup.c,
	* lib/src/strlen.c,
	* lib/src/strncmp.c,
	* lib/src/strncpy.c,
	* lib/src/strtol.c,
	* lib/src/strtoll.c,
	* lib/src/strtoull.c: Use the new header names.

	* lib/mtalpha.mk: Silence (known) warnings.

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the SL standard library.
	
	* lib/include/undocumented.h: Add more C99 declarations.

	* lib/src/atoi.c,
	* lib/src/atol.c,
	* lib/src/atoll.c,
	* lib/src/strtol.c,
	* lib/src/strtoll.c,
	* lib/src/strtoul.c,
	* lib/src/strtoull.c: New.

	* lib/mtalpha.mk: Update accordingly.
	
2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Misc fixes to MT-Alpha code generation.

	A number of quirks were discovereed when manually inspecting
	assembly source. While these may not be functional bugs they
	caused potentially inefficient code to be generated.

	* tools/bin/spp (pppalpha.rmswchbegin): Also disallow `swch'
	directly after a label.

	* tools/bin/spp (prunenopend): flush swch/nop/fnop sequences also
	when encountering a directive, instead of skipping until the next
	instruction. This prevents patterns like "br; swch; .align" from
	being transformed into "br; .align; swch".

	* tools/bin/spp (pppalpha.addswchll): shorten comments.

	* tools/bin/spp (pppalpha.printer): use less whitespace.

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in support for the `fast_' allocation routines.

	The call gate to C code used by the `fast_' macros in `cmalloc.h'
	had become invalid at some point when support for varargs and
	transparent function calls was implemented. A new call gate was
	required.
	
	* tools/lib/mtalpha-sim/callgate.s: New gate
	__sl_callgate_owntls. This is required for the manual call gate
	implemented in the library, since CALL_WITH_INFO cannot guarantee
	that the argument data in memory is at the tip of the stack.

	Also, document the gates.

	* lib/include/svp/callgate.h: Use the new gate.
	
2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add support for environment variables inside emulation.

	* tools/bin/slr.in,
	* tools/lib/r-mt-sim.sh.in: Propagate the host environment
	variables to the simulated environment. Environment data is loaded
	into simulator memory, initial address in $l18.

	* tools/lib/Makefile.am: Tell scripts where to find Python, as
	this is now used to build the environment data.

	* tools/lib/mtalpha-sim/slrt.s: Propagate environment data to
	`_lib_init_routine'.

	* lib/src/mtinit.s (_lib_init_routine): Initialize `environ' array
	for use by `getenv.c'.

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor bug fix.

	* tools/bin/slr.in,
	* tools/lib/r-mt-sim.sh.in: Care about potentially unset
	variables (VERBOSE, DESCRIPTION).

2010-01-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the SL standard library.

	* lib/include/sac_helpers.h: Move definitions into...
	* lib/include/undocumented.h: ... here. Add more C99 declarations.

	* lib/src/errno.c,
	* lib/include/cerrno.h: New.

	* lib/src/getenv.c,
	* lib/src/stpcpy.c,
	* lib/src/stpncpy.c,
	* lib/src/strchr.c,
	* lib/src/strcpy.c,
	* lib/src/strdup.c,
	* lib/src/strlen.c,
	* lib/src/strncmp.c,
	* lib/src/strncpy.c: Import from FreeBSD.

	* lib/src/mtalpha/memmove.S: Import from Linux.

	* lib/mtalpha.mk: Update accordingly.

2010-01-24  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix profiles `coma128' and `coma256'.

	* tools/lib/mt-profiles/coma128,
	* tools/lib/mt-profiles/coma256: Cores at 1.5GHz, not 1GHz.

2010-01-24  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Upgrade COMA support to latest simulator changes (+ bug fixes).

	* tools/lib/mt-profiles/coma128,
	* tools/lib/mt-profiles/coma256,
	* tools/lib/mt-profiles/ml-npcrypt-p1,
	* tools/lib/mt-profiles/ml-npcrypt-p2,
	* tools/lib/mt-profiles/ml-npcrypt-p4,
	* tools/lib/mt-profiles/ml-npcrypt-p8: Use new COMA configuration
	options.

	* tools/lib/mt-profiles/coma128,
	* tools/lib/mt-profiles/coma256: Use DDR3-2400 configuration
	instead of DDR3-1600, as decided in Apple-CORE.

	* tools/bin/slr.in: Fix handling of option -C. Repurpose -Cc and
	-Cd to "cores per cache" and "caches per directory", respectively.

	* tools/lib/r-mt-sim.sh.in: Update accordingly.

2010-01-12  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add missing whitespace in `mtperf_report_intervals'.

	* lib/src/perf.c (mtperf_report_intervals): Print newlines around
	the outer Fibre array boundaries.

2010-01-11  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix some whitespace handling with `sl_set' / `sl_get'.

	* tools/lib/t-pppalpha/slimpl.m4,
	* tools/lib/t-ptl/slimpl.m4,
	* tools/lib/t-seqc/slimpl.m4,
	* tools/lib/t-utc/slimpl.m4,
	* tools/lib/t-utc0/slimpl.m4: Use `m4_normalize' and `m4_ifblank'
	where appropriate.
	

2010-01-11  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Upgrade to latest version of M4Sugar.

	* tools/include/m4sugar.m4,
	* tools/include/m4sugar_foreach.m4,
	* tools/include/m4sugar_version.m4: Import from Autoconf 2.64.

	* tools/include/m4sugar_regexp.patch: More regex quoting fixes.

2010-01-11  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Improve documentation.

	* tools/bin/slr.in (Examples): Explain how to use `valgrind' and
	`time'.

2009-12-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix line numbering during `slc -EE' and later stages.

	A long standing bug would cause the compiler sync lines to become
	offset by 1 during the M4 processing. This would cause subsequent
	compiler / assembler error messages to designate wrong line
	numbers, and to produce invalid debugging information. This has
	been fixed.

	* tools/bin/cm4.in (wrepl): Shift line number by 1 before output.

	* doc/NEWS.txt: Announce the fix.

2009-12-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* configure.ac: use `$PWD' instead of `slc/' as name for the
	source tree when invoking `version-gen'.

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Allow reusing the automated version numbering by other trees.

	* Makefile.am: Move Automake rules to manage `.version' to...
	* build-aux/version.mk: ...here.
	
	* build-aux/Makefile.am: Install `version-gen' and `version.mk' so
	they can be picked up by `sl-init-autoconf'.
	
	* build-aux/sl-init-autoconf: Copy `version-gen' and `version.mk'
	where appropriate

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* doc/NEWS.txt: Initialize for 2.2.x.

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Release version 2.2.
	
	* build-aux/package_version: Update to 2.2.
	
	* doc/NOTES.txt: Document recent changes. Split change
	documentation for 2.1.0a from 2.2. Cleanup text and fix typos.

	* doc/HACKING.txt: Fix typos. Require Autoconf 2.61, not 2.63.

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Merge the following changes.

	2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Drop remaining `slh' files from library.

	* tools/include/fibre.slh,
	* tools/include/slr.slh,
	* tools/include/svp/lib.slh: Remove.

	* tools/Makefile.am (nobase_dist_pkgdata_DATA): Update
	accordingly.

	2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Cleanup sources.

	* tools/bin/cce.in,
	* tools/bin/sag,
	* tools/bin/scu,
	* tools/bin/slr.in,
	* tools/bin/slt-many.in,
	* tools/bin/slt.in,
	* tools/bin/spp,
	* tools/bin/timeout.in,
	* tools/include/m4sugar_transform.sed,
	* tools/include/slc.m4,
	* tools/lib/host-host-ptl/include/template.pl,
	* tools/lib/r-mt-sim.sh.in,
	* tools/lib/t-pppalpha/slimpl.m4,
	* tools/lib/t-ptl/slimpl.m4,
	* tools/lib/t-seqc/slimpl.m4,
	* tools/lib/t-utc/slimpl.m4,
	* tools/lib/t-utc0/slimpl.m4: Remove references to `$Id$'.

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix support for `slc -g3'.

	* tools/bin/slc.in: Do not use debug flags during initial
	preprocessing. Warn when `-g3' is specified.

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Timestamp and version output of scripts.

	* tools/bin/slc.in: Do not inform about `slrev' since it does not
	exist any more.

	* tools/bin/slr.in,
	* tools/bin/slt.in: Produce timestamp and script version number in
	output log.

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Packaging fix.

	* Makefile.am (VERSION_GEN): Check for `.git' in parent directory,
	as done by `configure.ac'.

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.

	* tools/lib/Makefile.am: Depend on `Makefile.am' not `Makefile'.

2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Use the new version numbering mechanism for scripts.

	* tools/bin/cce.in,
	* tools/bin/slc.in,
	* tools/bin/slr.in,
	* tools/bin/slt-many.in,
	* tools/bin/slt.in: Use `$slc_version' only, remove references to
	`$slrev' and `$rev' since this is now embedded in `$slc_version'.

	* tools/bin/Makefile.am: Make scripts and man pages depend on
	`$(top_srcdir)/.version' so they are regenerated on version bumps.
	
2009-12-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Introduce automatic version numbering.

	* build-aux/version-gen: New. Inspired from `git-version-gen', but
	privileging SVN revision numbers over git commit hashes.
	
	* build-aux/package-version: Set to 2.1.

	* configure.ac,
	* Makefile.am: Update to use `build-aux/version-gen'.

2009-12-20  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fixes (allow `make distcheck').
	
	* lib/mtalpha.mk (CLEANFILES): Clean all built objects.
	
	* tools/lib/Makefile.am (CLEANFILES): Clean generated scripts.

2009-12-20  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor fixes to quiet compiler warnings.
	
	* tools/lib/t-pppalpha/include/sl_support.h: Avoid multi-line
	`//'-style comments. (reported by C. Joslin)

	* lib/include/cstddef.h: Do not define `NULL' if it is already
	defined (requested by C. Joslin).

	* lib/src/gfx.c: Use proper `printf' format modifiers.

	* lib/src/mtclock.c: Define `shutup_ctime_h' to avoid warnings in
	`ctime.h'.

2009-12-20  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	New default MT profile that provides multiple places.

	This is required by `make check' in the `programs' package since
	the `mandel' benchmark requires at least two 1-core places.
	
	* tools/lib/mt-profiles/rmb8: New.
	* tools/lib/mt-profiles/default: Alias `rmb8'.

	* tools/lib/Makefile.am: Update accordingly.
	
2009-12-20  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Increase portability of the run script in execution packages.

	* tools/lib/r-mt-sim.sh.in: The script `run.sh' requires Bash, so
	mention that explicitely so that the script can be copied to a
	different system where `/bin/sh' is not bash. Also allow to
	override the MT simulator with an environment variable during
	re-play.

2009-12-20  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* build-aux/slc.m4: Also set `TMO' to the location of the
	`timeout' script.

2009-12-17  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance `slr' and `cce' for more flexibility.
	
	* tools/bin/slr.in: New parameter `-b' to specify the `cce' tag to
	use when compiling input data. Re-order stages to allow compiling
	Fibre data without a valid program executable when `-b' is
	specified.

	* tools/bin/cce.in: Recognize `mtalpha' and `mtsparc' as
	single-word aliases.

2009-12-16  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Also use the new `slr -p' feature with `slt'.
	
	* tools/bin/slt.in: Invoke `slr' with `-p'. 

2009-12-16  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor fixes in scripts.

	* tools/bin/timeout.in,
	* tools/bin/slr.in: Re-organize documentation.

	* tools/bin/slt.in: Use quotes properly.

2009-12-16  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Support packaging the execution process for later re-play.

	A new parameter `-p' is added to `slr'. It causes all the files
	required to run a program, minus the SL tool chain, to be saved to
	a directory. A copy of this directory is then sufficient to
	"re-play" the execution even without access to the SL tool chain.

	* tools/bin/slr.in: Support new option `-p'. Use timestamped
	`package directory' for temporary files. Link data input files and
	program executable in the package directory. Also print the
	timestamp when `-t' is used.

	* tools/lib/r-host.sh: Rename to...
	* tools/lib/r-host.sh.in: ...here. Save the program command line
	to the package directory.

	* tools/lib/r-mt-sim.sh.in: Save the program command line to the
	package directory.

	* tools/lib/Makefile.am: Also generate `r-host.sh'.

2009-12-16  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Make debugging output more informative.

	* tools/bin/slc.in,
	* tools/bin/slr.in,
	* tools/bin/slt.in,
	* tools/lib/r-mt-sim.sh.in: Use absolute pathnames when printing
	out program names.

2009-12-16  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug introduced with latest MT-Alpha optimization.

	When adding a `swch' before an potentially dependent instruction,
	the `swch' could become the very first non-directive in the
	assembly output. This is not valid, as it must always be preceded
	by an instruction. Hence, remove any `swch' not preceded by an
	instruction.
	
	* tools/bin/spp (pppalpha.filter2): New stage `rmswchbegin'.

2009-12-15  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	New MT-Alpha optimization.

	The following was observed during Apple-CORE benchmarking: in many
	"small" threads the operation that use the result of a memory load
	directly follow the load. They will arrive at the pipeline read
	stage without their dependency in most case, and then be
	rescheduled. This wastes one execution cycle per thread. It can be
	avoided in most cases by forcing a thread switch immediately
	before such instructions, so that other threads get a chance to
	execute and the dependency be satisfied by the time the
	instruction goes around the active thread queue.
	
	* tools/bin/spp (pppalpha.addswchll): Also add `swch' *before*
	operations that use the result of a long latency operation (not
	only after).

2009-12-14  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add support for more performance metrics from simulator.
	
	* lib/include/svp/perf.h, 
	* lib/src/perf.c: Add support for memory counters.

2009-12-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* doc/NEWS.txt: Update list of recent changes.

2009-12-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor `slr' improvements.

	* tools/lib/r-mt-sim.sh.in: Pass -d to simulator when `slr -t' is
	used. Move profile listing code to ...

	* tools/bin/slr.in: ... here. Also output command line with -t. Do
	not require a valid program with -m list.

2009-12-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* tools/lib/Makefile.am: Update profile list. 

2009-12-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	More MT profiles.

	* tools/lib/mt-profiles/coma128,
	* tools/lib/mt-profiles/coma256,
	* tools/lib/mt-profiles/default,
	* tools/lib/mt-profiles/simple,
	* tools/lib/mt-profiles/rmb128,
	* tools/lib/mt-profiles/rmb256,
	* tools/lib/mt-profiles/rmb4,
	* tools/lib/mt-profiles/rmb1: Use simple names always. Cleanup
	descriptions.

	* tools/lib/mt-profiles/ml-npcrypt-p1,
	* tools/lib/mt-profiles/ml-npcrypt-p2,
	* tools/lib/mt-profiles/ml-npcrypt-p4,
	* tools/lib/mt-profiles/ml-npcrypt-p8: New.

2009-12-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Introduce the concept of "simulator profiles" in `slr'.

	A new option `slr -m' is added to specify a simulator profile for
	execution. A profile captures in a simple name all the
	architectural settings of a microgrid: nr of cores, memory
	configuration, etc.

	Profiles are searched first in `~/.mt-profiles', then in the
	`mt-profile' directory of the build or installation tree.
	
	* tools/bin/slr.in,
	* tools/lib/r-mt-sim.sh.in: Allow use of simulator profiles. 

	* tools/lib/mt-profiles/sifir,
	* tools/lib/mt-profiles/bir,
	* tools/lib/mt-profiles/uc,
	* tools/lib/mt-profiles/dort,
	* tools/lib/mt-profiles/bes,
	* tools/lib/mt-profiles/alti,
	* tools/lib/mt-profiles/default,
	* tools/lib/mt-profiles/simple,
	* tools/lib/mt-profiles/rmb128,
	* tools/lib/mt-profiles/rmb256,
	* tools/lib/mt-profiles/coma128,
	* tools/lib/mt-profiles/coma256: Provide some reference profiles.

	* tools/lib/Makefile.am: Update accordingly.
	
2009-12-07  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix support for large thread indices in target `seqc'.

	* tools/lib/t-seqc/include/sl_support.h: Use type `long' for index
	values.

2009-12-07  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix output primitives to support merging stderr and stdout.
	
	* tools/include/svp/testoutput.h: Flush output streams after
	output operations. This allows for proper interleaving when stream
	1 and 2 alias each other.

2009-12-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor fix in SL macro expansion.
	
	* tools/include/slc.m4: Strip whitespace to determine the break
	type.

2009-12-02  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the SL library with C's character type predicates.

	* lib/include/cctype.h,
	* lib/src/ctype.c: New.

	* lib/Makefile.am,
	* lib/mtalpha.mk: Update accordingly.

2009-12-02  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor optimization.

	* lib/src/io.c: Expose staticness of `digits' to the compiler.

2009-12-02  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor portability fix.
	
	* tools/bin/cce.in: Place `-lslc' last on the command line to cope
	with single-pass linkers.

2009-11-24  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor `slr' fix.
	
	* tools/bin/slr.in,	
	* tools/lib/r-mt-sim.sh.in: Talk about "graphic update delay"
	instead of "rate", to reflect the features available in the MG
	simulator.

2009-11-19  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend Fibre syntax recognized by `slr'.
	
	* tools/bin/sag: New syntax `vc(N)' for Fibre which expands to an
	array of complex numbers. (Used by FFT)

2009-11-19  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Tweak simulation architecture defaults.
	
	* tools/lib/r-mt-sim.sh.in: Change default place layout to better
	spread cores across memory rings when using COMA.

2009-11-19  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor fix in the reporting of performance counters.

	* lib/src/perf.c (mtperf_report_intervals): Place interval labels
	at the end of each row when printing CSV with headers, so that
	parsing with simpler tools need not understand double quotes and
	spaces inside strings.

2009-11-19  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor fix in the reporting of performance counters.

	* lib/src/perf.c: Do not pad the Fibre array if the pad flag is
	set to 0.

2009-11-19  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in `slr'.
	
	* tools/lib/r-mt-sim.sh.in: Restore proper default setting of the
	number of cores when not specified on the command line.

2009-11-18  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Tweak the output format of the reporting of performance counters.
	
	* lib/include/svp/perf.h,	
	* lib/src/perf.c: Change output format as per discussions with
	Dan. Example are given in note [sl8].

2009-11-18  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the performance counters API in the library.
	
	* lib/include/svp/perf.h,
	* lib/src/perf.c: Add the features described in note [sl8].

2009-11-17  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Implement a non-documented SL extension for the SAC compiler.
	
	* tools/lib/t-seqc/slimpl.m4,
	* tools/lib/t-pppalpha/slimpl.m4,	
	* tools/lib/t-pppalpha/include/sl_support.h,
	* tools/bin/spp: Implement a new macro `sl_glparm_mutable' which
	aliases the global thread parameter with a local (writable) thread
	function variable.

	* tools/lib/t-utc/slimpl.m4,
	* tools/lib/t-utc0/slimpl.m4,
	* tools/lib/t-ptl/slimpl.m4: Implement stubs that generate an error.

2009-11-17  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Expose the `ar' and `ranlib' utilities.

	Two scripts are introduced: `slar' and `slranlib'. These take the
	SL implementation as first parameter, and then run the
	corresponding `ar' or `ranlib' utility with the remainder of the
	argument list.
	
	* tools/bin/cce.in: Generate definitions for `slc_ar' and
	`slc_ranlib'.

	* tools/bin/slar.in,
	* tools/bin/slranlib.in: New.

	* tools/bin/Makefile.am: Generate the new scripts `slar' and
	`slranlib'.
	
2009-11-17  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Allow to configure #caches and #directories with COMA.
	
	* tools/lib/r-mt-sim.sh.in: Set configuration when flags are
	specified.

2009-11-17  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Also test using COMA during `make check'.

	* build-aux/slctests.m4: New AM conditional `ENABLE_CHECK_COMA'.

	* build-aux/slctests.mk: Use it.
	
2009-11-17  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add support for COMA in `slr'.
	
	* build-aux/mgsim.m4: Search for `simx-alpha'.
	
	* tools/bin/slr.in: Add flags for COMA memory configuration. Move
	simulator-specific tests to...
	
	* tools/bin/r-mt-sim.sh.in: ...here. Select simulator executable
	depending on memory configuration.

2009-11-17  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Share runner script code between MT-Alpha/MT-Sparc.

	* tools/lib/r-mtsparc-sim.sh.in: Remove.
	* tools/lib/r-mtalpha-sim.sh.in: Rename to...	
	* tools/lib/r-mt-sim.sh.in: ...here. Change references to `alpha'
	to references to `@arch@'.
	
	* tools/lib/Makefile.am: Generate `r-mtalpha-sim.sh' and
	`r-mtsparc-sim.h' from `r-mt-sim.sh.in'.

	* configure.ac: Remove them from AC_CONFIG_FILES since they are
	now explicitly generated by the Makefile.

2009-11-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Update `utc0' code generation.
	
	* tools/lib/t-utc0/slimpl.m4: Expand to `sync()' instead of
	`__builtin_ut_sync()' (requested by S. Polstra).

2009-11-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix minor portability issue.

	* tools/lib/arggen.c: Only use threads when running MT. 

2009-11-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix minor bug in `slc'.

	When running with `slc -g -g' the underlying compiler would be
	confused. (reported by A. Matei)
	
	* tools/bin/cce.in: Properly split `slc_debug_flags' into an
	array.

2009-11-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Improve `slr' to allow more debugging.
	
	* tools/bin/slr.in: New option `-gd' to debug data generation.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor improvements to data input via `slr' and `sag'.
	
	* tools/lib/arggen.c: Optimize by using a parallel loop (suggested
	by M. Lankamp)

	* tools/bin/sag: Define functions `v', `vu' and `vl' for uses in
	Fibre data files.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Simplify handling of C99's `restrict'.

	* tools/include/slc.m4: Move definition of `restrict' to...	
	* tools/lib/t-ptl/include/sl_support.h: ...here.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Eliminate some warnings in library code.

	* lib/src/io.c: Use the primitives from `cmath.h' to test for
	infinity.

	* lib/src/mtsep.c: Cast 0 properly to make a pointer.
	
2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Do not warn about `ctime.h' when including `svp/perf.h'.

	* lib/include/ctime.h: Subject warning to conditional.
	* lib/include/svp/perf.h: Set conditional accordingly.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix code generation for `-b utcx -EE'.

	* tools/bin/cce.in: Provide compiler for `-b utcx', so that `slc
	-EE' can pass preprocessing.

	* tools/lib/t-utc/include/sl_support.h: Provide (empty) since it
	is required by `-EE'.
	
	* tools/lib/t-utc/slimpl.m4: Add more whitespace to make output
	more palatable.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Optimize the `seqc' target.
	
	* tools/lib/t-seqc/slimpl.m4: Use `long' for index values.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Optimize the `ptl' target.
	
	* tools/lib/host-host-ptl/include/create.tpl,
	* tools/lib/host-host-ptl/include/ptl_svp.h,
	* tools/lib/host-host-ptl/ptl_svp.cc,
	* tools/lib/t-ptl/simpl.m4: Get rid of references to
	`squeeze'. Use `long' for index values.

2009-11-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix minor portability issue.
	
	* tools/include/svp/compiler.h: Rewrite definition of `use()' to
	make it portable.

2009-10-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Cosmetic fixes for `slt'.
	
	* tools/bin/slt.in: Improve readability of test log. 

2009-10-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Cosmetic fixes for `slr'.
	
	* tools/bin/slr.in: Do not complain about `-n' being used if it
	specifies multiple places. (requested by M. Hicks)

	* tools/lib/r-mtsparc-sim.sh.in, 	
	* tools/lib/r-mtsparc-sim.sh.in: Allow `SIMARGS' to override
	`-n'. (requested by M. Hicks)	

2009-10-21  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in shared handling in `ppp' target.

	The latest changesets allowed the `fibonacci' demo program to fail
	by letting an alias to the incoming dependent leak to the outgoing
	write, causing no dependent read to actually occur in the location
	defined by the source program. Synchronization was thus not
	achieved properly.
	
	* tools/lib/t-pppalpha/include/sl_support.h: Clobber the dependent
	in `sl_setp', albeit at a different place than initially.

2009-10-21  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Slight optimization MT-Alpha code generation.
	
	* tools/bin/spp (pppalpha): Allow `end' immediately after a branch.

2009-10-21  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Re-optimize accesses to shareds in `ppp' target.

	The previous changeset was required to prevent incorrect code, but
	would also require a temporary register in all cases, including
	the simple `sl_setp(x, sl_getp(x) + 1)' which should instead be
	optimized to a single instruction. This changeset reintroduces
	this optimization opportunity.
	
	* tools/lib/t-pppalpha/include/sl_support.h: Remove superfluous
	clobber of the incoming shared just before a write to the
	outgoing. (but still clobber it afterwards)

2009-10-20  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix support for shareds in `ppp' target.

	Constructs of the form `sl_setp(x, (foo == 0) ? bar : 0)' would
	cause code generation to write to a shared register twice, which
	is incorrect. (reported by M. Lankamp)
	
	* tools/lib/t-pppalpha/include/sl_support.h: Use a temporary in
	the expansion of `sl_setp' and `sl_seta' to prevent computations
	and control flow between the "guard" asm statemetns.

2009-10-20  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* lib/seqc.mk (CLEANFILES), 
	* lib/ptl.mk (CLEANFILES): Mention `perf.o'.

2009-10-16  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix `slr' breakage.
	
	* tools/bin/sag: Fix order in which `slr' variables from program
	are considered.

2009-10-15  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix `slr -g' with simulator.
	
	* tools/lib/r-mtalpha-sim.sh.in (DEBUGGER),
	* tools/lib/r-mtsparc-sim.sh.in (DEBUGGER): Fix typo (do not use
	`.gfx' by default when debugging).

2009-10-15  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Reflect latest binutils changes. (cont.)
	
	* tools/lib/mtalpha-sim/slrt.s (_start),	
	* tools/lib/mtalpha-sim/callgate.s (__sl_callgate): Move
	`.registers' to before the label.

2009-10-15  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Reflect latest binutils changes.

	* tools/bin/spp (pppalpha.xjoin2): Emit the `.registers' directive
	before the function label. This is required because the register
	word should happen before the first instruction in the output and
	assembler does not reorder them anymore.

2009-10-15  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Increase portability of the `seqc' and `ptl' targets.

	On some systems, it is needed to link with `-lm' to get access to
	math functions.
	
	* build-aux/slc.m4: Check whether `-lm' is needed to use math on
	the host C/C++.
	
	* build-aux/sl.mk: Use $(LIBS) for the host system.

2009-10-14  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Allow multiple uses of `slr_decl' in the same translation unit.

	* tools/include/svp/slr.h: Support multiple uses of `slr_decl'.
	
	* tools/bin/sag: Sort variables according to the order specified
	in the source.

2009-10-13  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	ABI change: special memory now at the start of the address space.
	
	* lib/include/svp/perf.h: Counters now start at address +4 from
	the start of the address space, instead of -256 from the end.
	
	* tools/lib/t-utc0/slimpl.m4: The `setempty' instruction now
	expands to a load from address +4 from the start of the address
	space, instead of a load from the end of the address
	space. Transform the flush of a shared accordingly.
	
2009-10-13  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Prepare for ABI change.
	
	* tools/bin/cce.in: Change the base offset for MT linking to 16Mb,
	to allow for some reserved memory with special behavior before.

2009-10-13  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Ease post-processing of the output of `slr'.
	
	* tools/bin/sag (SlrVarGenerator.dogen): Prefix `#' to warning
	messages so they can be treated as comments in text-processing
	tools.

2009-10-12  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in MT-alpha code generation.

	When the legacy RA register is used as a temporary, a special
	"complete memory load" register access is emitted before the point
	a thread terminates, to ensure pending memory loads are flushed
	before the thread resources are used. This is a "required
	optimization" (to avoid pipeline stalls in the next thread that
	reuses the register). Unfortunately it is possible that the
	control flow reaches that point without using the RA register (it
	could be used only in some branches in the function body). The
	solution implemented is to conservatively initialize RA always
	when it may be used as a temporary.
	
	* tools/bin/spp (pppalpha.makeprotectspecial): New transform.
	(pppalpha.filter): Use it.

2009-10-10  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Provide support for anonymous thread arguments/parameters.
	
	* tools/include/slc.m4: Define new macro `sl_anonymous'.
	
	* tools/lib/t-ptl/slimpl.m4,
	* tools/lib/t-seqc/slimpl.m4,
	* tools/lib/t-utc0/slimpl.m4	
	* tools/lib/t-pppalpha/slimpl.m4: Use `sl_anonymous' when no
	thread parameter/argument name is provided.

2009-10-10  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix some issues with whitespace handling.
	
	* tools/include/m4sugar_regexp.patch: New.
	
	* tools/Makefile.am: Patch regexps after translating the quotes in
	m4sugar, since some regexps can contain valid single pairs of [
	and ].

	* tools/lib/t-seqc/slimpl.m4: Do not initialize thread arguments
	when the initializer is whitespace.

	* tools/bin/spp: Strip whitespace from initializer before testing
	for emptyness.

2009-10-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Make testsuite more resilient to long tests.

	* tools/bin/timeout.in: Increase the default timeout to 60
	seconds.

2009-10-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Increase support for C99.
	
	* tools/bin/cce.in: Use `-std=gnu99' when compiling for MT.

2009-10-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor fix.
	
	* build-aux/sl.mk (.c.x): Fix typo in variable expansion.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the build framework.
	
	* build-aux/sl.mk: Allow Makefiles to add flags to the `slc'
	command lines.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the performance counters library.

	* lib/include/svp/perf.h: Introduce new macro `REPORT_STREAM'.
	
	* lib/src/perf.c: Use the specified stream for output.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug with special characters in string constants.

	* tools/bin/cm4.in: Insert string delimiters after inserted hex
	escapes, to prevent adjacent digits from taking part in the
	character code.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance `slr'.
	
	* tools/bin/slr.in: Also use `SLR_RECURSIVE' when processing the
	Fibre input.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Allow to use thread function pointers with muTC-ptl.
	
	* tools/lib/t-ptl/simpl.m4: Do not take the address of the thread
	function when invoking uTC::create.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* tools/include/svp/compiler.h (alwaysinline): Fix typo.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the library.
	
	* tools/include/svp/compiler.h: Introduce new macro
	`use'. (req. by M. Lankamp)

2009-10-07  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Optimize the root SEP allocator.
	
	* lib/src/mtsep.c: Bucket places by power of 2 sizes; remove
	allocated places from their allocation pools during `alloc' and
	put them back during `free'.

2009-10-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Increase C99 compatibility.
	
	* tools/bin/cce.in: Append `-std=gnu99' when compiling C
	natively. (reported by A. Matei)

2009-10-06  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance `slr', most notably to set up gfx output.

	The following options are introduced: `-X' enable graphics, `-Xr'
	set refresh rate, `-Xs' set scaling factors, `-Xd' set output
	dimensions.
	
	* tools/bin/slr.in: Add support for the new options. Document
	them.

	* tools/lib/r-mtalpha-sim.sh.in,	
	* tools/lib/r-mtsparc-sim.sh.in: Use the `gfx' version of the	
	simulator where needed. Also enhance to use the `dbg' version when
	-g is given to `slr'.
	
2009-10-01  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Introduce performance counters and C99's clock().

	* lib/include/ctime.h,
	* lib/src/mtclock.c: New.

	* lib/include/svp/perf.h: Deprecate `get_cycles()' in favor of
	`clock()'.

	* lib/include/svp/perf.h,
	* lib/src/perf.c: Implement the API described in note [sl8].

	* lib/Makefile.am,
	* lib/seqc.mk,
	* lib/ptl.mk,
	* lib/mtalpha.mk: List the new files.
	
2009-09-30  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Introduce a default architecture configuration with many places.
	
	* tools/bin/slr.in: Change documentation for `-n'. Force default
	to many places of varying sizes.

	* tools/bin/slt.in: Update documentation to remove uses of `-n'.

	* build-aux/slctests.mk: Do not use `-n' any more. Programs can
	request multiple tests via SLT_RUN in the source code.
	
2009-09-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix support for C99's float.h.

	* lib/include/bits/float.h: New. 
	* lib/Makefile.am: Update accordingly.

2009-09-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix build of demos that require the math library.
	
	* build-aux/sl.mk: Compile to MT alpha with `-lm' always, so that
	demo code does not need to sort out when it is needed and not.

2009-09-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* doc/NEWS.txt: Document latest big changes.

2009-09-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Improve command-line argument handling in `slc'.

	The script supports `-ftrace-m4' but documents `-fm4-trace'. Also
	the underlying M4 implementation has changed the parameter for the
	output file from `-o' to `--debugfile'.
	
	* tools/bin/slc.in: Align documentation with
	implementation. Update to new M4 interface.

2009-09-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Align API for place allocation with documentation.

	Note [sl7] was authored to document the API and introduces the
	concept of SEP. Ensure this concept exists in the implementation
	as well. Also, place sharing does not exist yet.

	* lib/include/svp/sep.h,	
	* lib/src/mtsep.c: Introduce the SEP. Remove support for place
	sharing.
	
2009-09-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in SL macro expansion.
	
	* tools/lib/t-pppalpha/slimpl.m4: Shell-quote the thread function
	name when calling Python, so as to avoid strangeness with names of
	the form "foo->bar" etc.

2009-09-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the graphics output library.
	
	* lib/include/svp/gfx.h: Add support for pixel output at offset
	from start of framebuffer.

2009-09-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Small optimization in MT-alpha code generation.

	* tools/bin/spp (pppalpha.addswchll): Properly recognize `sqrt' as
	a long-latency operation.

2009-09-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.

	* lib/Makefile.am: Install math headers.
	
	* lib/mtalpha.mk: Distribute math modules.

2009-09-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Improve support for C99 math.
	
	* lib/include/cmath.h: Properly define `float_t' and
	`double_t'. Set `math_errhandling' to 0 since there is actually no
	handling implemented.

2009-09-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* tools/bin/slt.in: Compile tests with `-lm'.

2009-09-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add support for C99 math on MT-alpha.

	* lib/include/cfloat.h,
	* lib/include/cmath.h: Declare C99 math.
	
	* lib/src/missing_uclibc_math.c: New.
	
	* lib/src/mtalpha/m/acosf.o,
	* lib/src/mtalpha/m/acoshf.o,
	* lib/src/mtalpha/m/asinf.o,
	* lib/src/mtalpha/m/asinhf.o,
	* lib/src/mtalpha/m/atan2f.o,
	* lib/src/mtalpha/m/atanf.o,
	* lib/src/mtalpha/m/atanhf.o,
	* lib/src/mtalpha/m/cabsf.o,
	* lib/src/mtalpha/m/carg.o,
	* lib/src/mtalpha/m/cargf.o,
	* lib/src/mtalpha/m/cbrtf.o,
	* lib/src/mtalpha/m/ceilf.o,
	* lib/src/mtalpha/m/copysignf.o,
	* lib/src/mtalpha/m/cosf.o,
	* lib/src/mtalpha/m/coshf.o,
	* lib/src/mtalpha/m/e_acos.o,
	* lib/src/mtalpha/m/e_acosh.o,
	* lib/src/mtalpha/m/e_asin.o,
	* lib/src/mtalpha/m/e_atan2.o,
	* lib/src/mtalpha/m/e_atanh.o,
	* lib/src/mtalpha/m/e_cosh.o,
	* lib/src/mtalpha/m/e_exp.o,
	* lib/src/mtalpha/m/e_fmod.o,
	* lib/src/mtalpha/m/e_gamma.o,
	* lib/src/mtalpha/m/e_gamma_r.o,
	* lib/src/mtalpha/m/e_hypot.o,
	* lib/src/mtalpha/m/e_j0.o,
	* lib/src/mtalpha/m/e_j1.o,
	* lib/src/mtalpha/m/e_jn.o,
	* lib/src/mtalpha/m/e_lgamma.o,
	* lib/src/mtalpha/m/e_lgamma_r.o,
	* lib/src/mtalpha/m/e_log.o,
	* lib/src/mtalpha/m/e_log10.o,
	* lib/src/mtalpha/m/e_log2.o,
	* lib/src/mtalpha/m/e_pow.o,
	* lib/src/mtalpha/m/e_rem_pio2.o,
	* lib/src/mtalpha/m/e_remainder.o,
	* lib/src/mtalpha/m/e_scalb.o,
	* lib/src/mtalpha/m/e_sinh.o,
	* lib/src/mtalpha/m/e_sqrt.o,
	* lib/src/mtalpha/m/erfcf.o,
	* lib/src/mtalpha/m/erff.o,
	* lib/src/mtalpha/m/exp2f.o,
	* lib/src/mtalpha/m/expf.o,
	* lib/src/mtalpha/m/expm1f.o,
	* lib/src/mtalpha/m/fabsf.o,
	* lib/src/mtalpha/m/fdimf.o,
	* lib/src/mtalpha/m/floorf.o,
	* lib/src/mtalpha/m/fmaf.o,
	* lib/src/mtalpha/m/fmaxf.o,
	* lib/src/mtalpha/m/fminf.o,
	* lib/src/mtalpha/m/fmodf.o,
	* lib/src/mtalpha/m/frexpf.o,
	* lib/src/mtalpha/m/hypotf.o,
	* lib/src/mtalpha/m/ilogbf.o,
	* lib/src/mtalpha/m/k_cos.o,
	* lib/src/mtalpha/m/k_rem_pio2.o,
	* lib/src/mtalpha/m/k_sin.o,
	* lib/src/mtalpha/m/k_standard.o,
	* lib/src/mtalpha/m/k_tan.o,
	* lib/src/mtalpha/m/ldexpf.o,
	* lib/src/mtalpha/m/lgammaf.o,
	* lib/src/mtalpha/m/llrintf.o,
	* lib/src/mtalpha/m/llroundf.o,
	* lib/src/mtalpha/m/log10f.o,
	* lib/src/mtalpha/m/log1pf.o,
	* lib/src/mtalpha/m/log2f.o,
	* lib/src/mtalpha/m/logbf.o,
	* lib/src/mtalpha/m/logf.o,
	* lib/src/mtalpha/m/lrintf.o,
	* lib/src/mtalpha/m/lroundf.o,
	* lib/src/mtalpha/m/modff.o,
	* lib/src/mtalpha/m/nan.o,
	* lib/src/mtalpha/m/nearbyintf.o,
	* lib/src/mtalpha/m/nextafterf.o,
	* lib/src/mtalpha/m/powf.o,
	* lib/src/mtalpha/m/remainderf.o,
	* lib/src/mtalpha/m/remquof.o,
	* lib/src/mtalpha/m/rintf.o,
	* lib/src/mtalpha/m/roundf.o,
	* lib/src/mtalpha/m/s_asinh.o,
	* lib/src/mtalpha/m/s_atan.o,
	* lib/src/mtalpha/m/s_cbrt.o,
	* lib/src/mtalpha/m/s_ceil.o,
	* lib/src/mtalpha/m/s_copysign.o,
	* lib/src/mtalpha/m/s_cos.o,
	* lib/src/mtalpha/m/s_erf.o,
	* lib/src/mtalpha/m/s_expm1.o,
	* lib/src/mtalpha/m/s_fabs.o,
	* lib/src/mtalpha/m/s_fdim.o,
	* lib/src/mtalpha/m/s_finite.o,
	* lib/src/mtalpha/m/s_finitef.o,
	* lib/src/mtalpha/m/s_floor.o,
	* lib/src/mtalpha/m/s_fma.o,
	* lib/src/mtalpha/m/s_fmax.o,
	* lib/src/mtalpha/m/s_fmin.o,
	* lib/src/mtalpha/m/s_fpclassify.o,
	* lib/src/mtalpha/m/s_fpclassifyf.o,
	* lib/src/mtalpha/m/s_frexp.o,
	* lib/src/mtalpha/m/s_ilogb.o,
	* lib/src/mtalpha/m/s_isinf.o,
	* lib/src/mtalpha/m/s_isinff.o,
	* lib/src/mtalpha/m/s_isnan.o,
	* lib/src/mtalpha/m/s_isnanf.o,
	* lib/src/mtalpha/m/s_ldexp.o,
	* lib/src/mtalpha/m/s_lib_version.o,
	* lib/src/mtalpha/m/s_llrint.o,
	* lib/src/mtalpha/m/s_llround.o,
	* lib/src/mtalpha/m/s_log1p.o,
	* lib/src/mtalpha/m/s_logb.o,
	* lib/src/mtalpha/m/s_lrint.o,
	* lib/src/mtalpha/m/s_lround.o,
	* lib/src/mtalpha/m/s_matherr.o,
	* lib/src/mtalpha/m/s_modf.o,
	* lib/src/mtalpha/m/s_nearbyint.o,
	* lib/src/mtalpha/m/s_nextafter.o,
	* lib/src/mtalpha/m/s_remquo.o,
	* lib/src/mtalpha/m/s_rint.o,
	* lib/src/mtalpha/m/s_round.o,
	* lib/src/mtalpha/m/s_scalbln.o,
	* lib/src/mtalpha/m/s_scalbn.o,
	* lib/src/mtalpha/m/s_signbit.o,
	* lib/src/mtalpha/m/s_signbitf.o,
	* lib/src/mtalpha/m/s_signgam.o,
	* lib/src/mtalpha/m/s_significand.o,
	* lib/src/mtalpha/m/s_sin.o,
	* lib/src/mtalpha/m/s_tan.o,
	* lib/src/mtalpha/m/s_tanh.o,
	* lib/src/mtalpha/m/s_trunc.o,
	* lib/src/mtalpha/m/scalblnf.o,
	* lib/src/mtalpha/m/scalbnf.o,
	* lib/src/mtalpha/m/sinf.o,
	* lib/src/mtalpha/m/sinhf.o,
	* lib/src/mtalpha/m/sqrtf.o,
	* lib/src/mtalpha/m/tanf.o,
	* lib/src/mtalpha/m/tanhf.o,
	* lib/src/mtalpha/m/tgammaf.o,
	* lib/src/mtalpha/m/truncf.o,
	* lib/src/mtalpha/m/w_acos.o,
	* lib/src/mtalpha/m/w_acosh.o,
	* lib/src/mtalpha/m/w_asin.o,
	* lib/src/mtalpha/m/w_atan2.o,
	* lib/src/mtalpha/m/w_atanh.o,
	* lib/src/mtalpha/m/w_cabs.o,
	* lib/src/mtalpha/m/w_cosh.o,
	* lib/src/mtalpha/m/w_drem.o,
	* lib/src/mtalpha/m/w_exp.o,
	* lib/src/mtalpha/m/w_exp2.o,
	* lib/src/mtalpha/m/w_fmod.o,
	* lib/src/mtalpha/m/w_gamma.o,
	* lib/src/mtalpha/m/w_hypot.o,
	* lib/src/mtalpha/m/w_j0.o,
	* lib/src/mtalpha/m/w_j1.o,
	* lib/src/mtalpha/m/w_jn.o,
	* lib/src/mtalpha/m/w_lgamma.o,
	* lib/src/mtalpha/m/w_lgamma_r.o,
	* lib/src/mtalpha/m/w_log.o,
	* lib/src/mtalpha/m/w_log10.o,
	* lib/src/mtalpha/m/w_log2.o,
	* lib/src/mtalpha/m/w_pow.o,
	* lib/src/mtalpha/m/w_remainder.o,
	* lib/src/mtalpha/m/w_sinh.o,
	* lib/src/mtalpha/m/w_sqrt.o,
	* lib/src/mtalpha/m/w_tgamma.o: Import from uClibc 0.9.30.1.
	
	* lib/src/mtamathobjs.mk: List the precompiled objects.
	
	* lib/mtalpha.mk: New target `mtalpha-sim/libm.a'.	

2009-09-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix support for reusing `slr' parameters in `slt'.

	A previous patch introduced a new environment variable
	EXTRA_RUN_ARGS. This approach is too intrusive as it can leak
	across test cases in a shell environment.

	* tools/bin/slt.in: Remove support for EXTRA_RUN_ARGS. Introduce a
	new option `-a' with the same effect.

2009-09-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add support for multiple source files per unit test.

	* tools/bin/slt.in: Recognize `--' as separator between test
	sources and the implementation list. For backward compatibility,
	if the separator is not present, only one source file is
	allowed. Handle multiple sources per test. (Requested by
	M. Lankamp)

2009-09-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix support for `slc -combine'.

	When using `-combine=P', multiple inclusions of `sl_support.h'
	would occur and cause multiple definitions to happen later during
	compilation.
	
	* tools/lib/t-utc0/include/sl_support.h,
	* tools/lib/t-seqc/include/sl_support.h,
	* tools/lib/t-ptl/include/sl_support.h,	
	* tools/lib/t-pppalpha/include/sl_support.h: Protect definitions
	with conditional.

2009-09-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add support for reusing `slr' parameters.
	
	* tools/bin/slt.in: Use the variable `EXTRA_RUN_ARGS' on each run
	of `slr'. (Requested by M. Lankamp)

2009-09-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Expose the availability of place management to programs.

	* lib/include/svp/sep.h: Introduce the macro `SVP_HAS_SEP' is
	introduced which signals to program the availability of place
	management.

2009-09-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Integrate the place allocator in the library.

	* tools/lib/mtalpha-sim/slrt.s: Move the definition of the
	pointers to fibre and variable data, as well as their
	initializations, to C code in...
	
	* slc/lib/src/mtinit.c: here. Call the place allocator
	initialization as part of the library initialization.
	
	* slc/lib/Makefile.am: Mention the new files.

	* slc/lib/mtalpha.mk: Compile them into the library.

2009-09-24  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Import Joe's work on place allocation.

	An initial version of a SVP place allocator was developed by Joe
	Master using a first-fit algorithm; this was extended to provide
	multiple allocation policies.
	
	* lib/include/svp/sep.h,
	* lib/src/mtsep.c: New.

2009-09-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix symbolic place names in `seqc'.

	The `seqc' implementation was out-of-sync with the others in not
	defining `PLACE_LOCAL' and `PLACE_DEFAULT'.
	
	* tools/lib/t-seqc/include/sl_support.h: Rename `SVP_LOCAL' to
	`PLACE_LOCAL' and define `PLACE_DEFAULT'.

2009-09-24  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Small optimization in MT-alpha code generation.
	
	* tools/bin/spp (pppalpha.makerepl): Prepend the dollar signs
	early.

2009-09-23  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bugs in MT-alpha code generation.
	
	* tools/lib/t-pppalpha/include/sl_support.h: Fix `sl_setp' for
	floating-point shared parameters.

	* tools/bin/spp (pppalpha.findusedcallregs, pppalpha.rewritejsr):
	Be (more) careful about function calls where both int and fp
	registers are used for function calls.

	* tools/bin/spp (pppalpha.fixemptyf, pppalpha.filter2): Add new
	pass to rename `setempty' to `setemptyf' is the argument is a
	floating-point register. Use it.

	* tools/lib/t-utc0/slimpl.m4: Attempt to implement empty shared
	thread arguments by emitting an explicit load from the top of the
	address space.
	
2009-09-21  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Simplify build.
	
	* lib/ptl.mk,	
	* lib/seqc.mk: Simplify by providing a generic rule %.c -> %.o.

2009-09-21  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add support for a graphical framebuffer.

	This changeset adds support for the graphics output in the MG
	simulator introduced in r2814-r2817, and simulates a framebuffer
	using memory but no graphics when using the other SVP
	implementations.
	
	* lib/include/svp/gfx.h,
	* lib/src/gfx.c: New.

	* lib/Makefile.am: Update accordingly.
	
	* lib/seqc.mk,
	* lib/ptl.mk: Include `gfx.c' in the library.

2009-09-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* tools/bin/Makefile.am: Make script generation dependent on the
	`Makefile' itself, since they need to be re-made when tools are
	reconfigured.

2009-09-15  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in `slr'.

	The `raw:' input scheme would attempt to load twice too many bytes
	from the file, due to an invalid loop increment.

	* tools/bin/sag: Fix bug.
	
2009-08-31  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* tools/bin/Makefile.am: Use unique temporary directory to build
	the scripts. This allows proper behavior when building the man
	pages in concurrent `make' invocations.

2009-08-31  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Improve autonomy of other packages using SLC.
	
	* build-aux/slc.m4: Also try find `slc' in PATH if not specified
	with `--with-slc' or SLC_BASE. Reject double slashes in SLC_BASE
	as this is known to cause issues with M4.

2009-08-31  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix `slr' bug.

	Under some circumstances `slr' would not be able to find which
	runner to use with an executable after it was compiled. This
	changeset addresses this issue. (reported by M. Lankamp)
	
	* tools/lib/host-host-seqc/slrt.c,	
	* tools/lib/host-host-ptl/slrt.c: Ensure that the magic strings
	are prefixed by a NUL byte so that the `strings' command can find
	them. 
	
2009-08-31  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix packaging.

	* lib/Makefile.am: Distribute and install `svp/callgate.h'.

2009-08-30  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Update documentation.

	* doc/HACKING.txt,
	* doc/NEWS.txt,
	* doc/README.txt,
	* doc/acronyms.txt,	
	* doc/requirements.txt: Update to latest software changes.

2009-08-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix typo in `sac_helpers.h'.

	* lib/include/sac_helpers.h (fast_safe_free): Delegate to
	`fast_free', not `safe_free'.

2009-08-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add more SAC to muTC helpers.
	
	* lib/include/sac_helpers.h: Also provide `fast_safe_free'.

2009-08-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Packaging fix.
	
	* lib/Makefile.am: Distribute and install `calloca.h'.

2009-08-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Improve global memory allocation.

	This changeset introduces a set of `fast_' wrappers around memory
	allocation functions toavoid an intermediary function context to
	reach their respective algorithm. This was suggested by Chris
	Jesshope. Also increase the `malloc' pool by larger chunks, so
	that pool extension happens less often.
	
	* lib/src/callgate.h: Rename to...
	* lib/include/svp/callgate.h: ...here. Simplify.

	* lib/include/cmalloc.h: Provide wrappers.
	
	* lib/src/malloc_wrappers.c: Simplify by using the wrappers.
	
	* lib/mtalpha.mk,	
	* lib/src/malloc_intrinsics.c: Make the page size bigger, so that
	`malloc' increases its pool by bigger chunks.

2009-08-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Complete support for C's (non-standard) `alloca'.

	Since `alloca' is merely play on the stack pointer and the frame
	pointer everything was in place except the declaration of the name
	`alloca' itself. This changeset provides a header for this
	purpose.
	
	* lib/include/calloca.h: New.
	
	* lib/include/sac_helpers.h: Add `safe_free()', which calls
	`free()' if and only if it detects its argument is not the result
	of `alloca'. This is non-portable (Microgrid only).

2009-08-27  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	MT-Alpha ISA change: `allocate' takes the place identifier as input.

	Creates using the default place must flush the register passed to
	`allocate'. `setplace' disappears.

	* tools/lib/t-pppalpha/include/sl_support.h,
	* tools/lib/mtalpha-sim/main.c,
	* lib/src/callgate.h,
	* lib/src/mtalpha/mtdiv.s,
	* tools/bin/spp (pppalpha.create, pppalpha.remdefaults,
	pppalpha.rewritejsr): Pass the place identifier as input to
	`allocate'. Do not use `setplace' any more.

	* tools/bin/spp (pppalpha.addswchll): Recognize that `allocate'
	reads its parameter. Also recognize that `clr' and `fclr' make the
	target register immediately available for reading.
	
2009-08-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix packaging. This allows `make distcheck' to succeed.

	* build-aux/Makefile.am: Distribute `sl-init-autoconf'.

	* tools/bin/Makefile.am: Fix manpage dependencies to please
	`distcleancheck'.

2009-08-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fixes.
	
	* build-aux/slc.m4: Fail if the SL tools cannot be found. Use
	`sl-core' instead of `slc' to fetch installed files from.

2009-08-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Make package more reusable for other trees.

	There are two ways the parts of the source tree can be used:
	either together as sub-trees of the "base" package, or
	independently of the base package after the `sl-core' package was
	installed somewhere on the system.

	In the former case the tools and makefile rules can be picked up
	relative to the directory where they are reused; in the latter
	case they must pick them up from some agreed-upon install
	location.

	The new `sl-init-autoconf' script implements this protocol by
	fetching the aclocal and Makefile rules (.mk) from the "nearest"
	location, either a source tree "nearby" (next to the
	`sl-init-autoconf' script itself) or from the install locations.

	* build-aux/sl-init-autoconf: New.
	
	* build-aux/Makefile.am: Install `sl-init-autoconf'. Also install
	the `.mk' files to some location where `sl-init-autoconf' can find
	them.

	* Makefile.am: Recurse into `build-aux'.
	
2009-08-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Rename the package to `sl-core'.

	* configure.ac: Change package name.

2009-08-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* ChangeLog: initialize.

See `ChangeLog.1' for earlier changes.
