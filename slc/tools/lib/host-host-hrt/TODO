init main_place_id to -1 (or do smth to force the create in libslmain to be done the local node)

define an initializer with __attribute__((constructor)) that calls mmap(BIG); free(); 
(or do malloc at the beginning of main()) - to make sure we start
with a non-empty heap, so that a number of mallocs done by libc will work.

take care to close all sockets; in particular the "daemon" one on the primary and secondaries

investigate why we need -O0

warning: Using 'getaddrinfo' in statically linked applications requires at runtime the shared libraries from the glibc version used for linking

in write_istruct and read_istruct, the generic version, handle the case where the reader/writer is inexistent (node_index == -1); this will happen for continuation creates, because the parent is inexistent?

discuss with Raphael about schemes for distibuting the threads in a fam, and what aditional concurrency some schemes might produce. When assigning multiple chunks to a TC, does a block size != 1 make any sense?

fix atomic_increment_next_tc

replace NODE_INDEX with a function which returns the current node

support continuation creates - careful, the .parent of a TC can't be a dummy, since reading a global
calls get_parent_ident() to find out who is going to write the global...

- when working across nodes, make sure the shareds written by a child make it across the network before the
write to the "done" istruct
