#! @BASH@
# -*- mode: shell-script -*-
# timeout: This file is part of the SL toolchain.
#
# Copyright (C) 2009 Universiteit van Amsterdam.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 3
# of the License, or (at your option) any later version.
#
# The complete GNU General Public Licence Notice can be found as the
# `COPYING' file in the root directory.
#
set -eu
PS4='+ timeout($$): '
if test -n "${TRACE:-}"; then set -x; fi

if test $# -lt 1; then
    cat >&2 <<EOF
usage: $0 <commandline ...>

Execute a program and force terminate its execution if it does not
terminate normally before a timeout.

The program is terminated with SIGTERM (exit code 143) if the timeout
expires before the command terminates. If the command does not respond
to SIGTERM, it is sent SIGKILL (exit code 137) after 2 seconds.

The default timeout is 60 seconds, unless overloaded with the
environment variable TIMEOUT.
EOF
    exit 1
fi

TIMEOUT=${TIMEOUT:-60}

set -m

# start watchdog
TIMEOUT_PPID=$$
(
    # in watchdog
    exec >/dev/null 0<&1 2>&1      # do not communicate
    trap : ALRM HUP TERM QUIT INT  # ignore (some) signals
    for ((i=0; i<$TIMEOUT; ++i)); do
	if ! kill -0 $TIMEOUT_PPID; then exit 0; fi
	sleep 1
    done
    if kill -TERM $TIMEOUT_PPID; then
	sleep 2
	kill -KILL $TIMEOUT_PPID
    fi
) &

exec "$@"
# NOT REACHED
