#! /bin/bash
set -e
srcdir=$1
top_builddir=$2
binlist=($BENCH_BINFORMATS)
plist=($PLIST)
fdatas=()
pdatas=()
results=()
shift
shift
echo "## This file is automatically generated. Do not edit!"
cat <<EOF
AM_V_GEN = \$(am__v_GEN_\$(V))
am__v_GEN_ = \$(am__v_GEN_\$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " \$@;
EOF
for bench_src in "$@"; do
   bench_base=${bench_src%.c}
   bench_src=$(test -r "$srcdir/$bench_src" && echo "$srcdir" || echo .)/$bench_src
   ispec_src=$(test -r "$srcdir/$bench_base.inputs" && echo "$srcdir" || echo .)/$bench_base.inputs
   bench_inputs=($(
       if test -r "$ispec_src"; then
	   (while read pat; do
	       for f in "$srcdir"/$pat.d*[0-9] ./$pat.d*[0-9]; do
		   if test -r "$f"; then echo "$f"; fi
	       done; done) <"$ispec_src"
       else 
	   for f in "$srcdir/$bench_base".d*[0-9] ./"$bench_bas".d*[0-9]; do
	       if test -r "$f"; then echo "$f"; fi
	   done
       fi))
   if test 0 = ${#bench_inputs[*]}; then
       echo "$bench_base: no inputs defined" >&2
       continue
   fi
   for b in "${binlist[@]}"; do
       pdatas_here=()
       for i in "${bench_inputs[@]}"; do
	   ibase=${i##*/}
	   fdata="benchdata/$b-$bench_base-$ibase.fdata"
	   echo "$fdata: $bench_base.x $i ;" \
	       "\$(AM_V_GEN)mkdir -p benchdata && " \
	       "\$(SLR) $bench_base.bin.$b -f $i -wf \$@ -wo 2>/dev/null"
	   fdatas+=("$fdata")
	   for p in "${plist[@]}"; do
	       pdata="benchdata/$b-$bench_base-$ibase.p$p.out"
	       echo "$pdata: $bench_base.x $fdata $i ;" \
		   "\$(AM_V_GEN)echo \"## program=$bench_base ncores=$p input=$ibase\" >\$@.err && " \
		   "\$(SLR) $bench_base.bin.$b -rf $fdata L= sep_dump= results= format=1 ncores=$p -Ws,-q 2>>\$@.err >/dev/null && " \
		   "mv \$@.err \$@"
	       pdatas_here+=("$pdata")
	       pdatas+=("$pdata")
	   done
       done
       rdata="$bench_base.$b.out"
       echo "$rdata: ${pdatas_here[*]}; \$(AM_V_GEN)cat \$^ >\$@"
       results+=("$rdata")
   done
done
echo ".PHONY: fdata results"
echo "fdata: ${fdatas[*]}"
echo "results: ${results[*]}"
echo "clean: ; rm -f ${fdatas[*]} ${pdatas[*]} ${results[*]}"
