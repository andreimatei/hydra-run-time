2009-11-18  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor fix for benchmarking.
	
	* build-aux/genbench.sh: Split the `clean' rule to avoid "argument
	list too long".

2009-11-18  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Adapt the benchmarking framework to latest library updates.
	
	* benchmarks/lib/benchmark.h,	
	* benchmarks/lib/benchmark.c: Use the new API for intervals and
	reporting from `<svp/perf.h>'. Simplify. Add tags to
	`start_interval' and `finish_interval'.
	
	* benchmarks/mandel/mandel.c: Use the new interface for
	`start_interval()' and `finish_interval()'.

2009-11-05  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in BLAS `isamax' and `idamax' benchmarks.

	* benchmarks/blas/templates/xiamax.c: Accept parameter through
	`sl_shparm', not `sl_shfparm'.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Small bug in benchmark list generation.
	
	* build-aux/genbench.sh: Fix typo and remove duplicates. 

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix bug in BLAS `isamax' and `idamax' benchmarks.
	
	* benchmarks/blas/bench-isamax.c (work),	
	* benchmarks/blas/bench-idamax.c (work): Use `sl_sharg' instead of
	`sl_shfarg'.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	New inputs for BLAS benchmarks.

	* benchmarks/blas/asum.d1,
	* benchmarks/blas/asum.d2,
	* benchmarks/blas/asum.d3,
	* benchmarks/blas/axy.d1,
	* benchmarks/blas/axy.d2,
	* benchmarks/blas/axy.d3,
	* benchmarks/blas/dot.d1,
	* benchmarks/blas/dot.d2,
	* benchmarks/blas/dot.d3,
	* benchmarks/blas/rot.d1,
	* benchmarks/blas/rot.d2,
	* benchmarks/blas/rot.d3: Remove.

	* benchmarks/blas/data/cvv.d1,
	* benchmarks/blas/data/cvv.d10,
	* benchmarks/blas/data/cvv.d100,
	* benchmarks/blas/data/cvv.d1000,
	* benchmarks/blas/data/cvv.d10000,
	* benchmarks/blas/data/cvv.d100000,
	* benchmarks/blas/data/cvv.d2,
	* benchmarks/blas/data/cvv.d20,
	* benchmarks/blas/data/cvv.d200,
	* benchmarks/blas/data/cvv.d2000,
	* benchmarks/blas/data/cvv.d20000,
	* benchmarks/blas/data/cvv.d5,
	* benchmarks/blas/data/cvv.d50,
	* benchmarks/blas/data/cvv.d500,
	* benchmarks/blas/data/cvv.d5000,
	* benchmarks/blas/data/cvv.d50000,
	* benchmarks/blas/data/v.d1,
	* benchmarks/blas/data/v.d100,
	* benchmarks/blas/data/v.d1000,
	* benchmarks/blas/data/v.d10000,
	* benchmarks/blas/data/v.d100000,
	* benchmarks/blas/data/v.d200,
	* benchmarks/blas/data/v.d2000,
	* benchmarks/blas/data/v.d20000,
	* benchmarks/blas/data/v.d500,
	* benchmarks/blas/data/v.d5000,
	* benchmarks/blas/data/v.d50000,
	* benchmarks/blas/data/vv.d1,
	* benchmarks/blas/data/vv.d10,
	* benchmarks/blas/data/vv.d100,
	* benchmarks/blas/data/vv.d1000,
	* benchmarks/blas/data/vv.d10000,
	* benchmarks/blas/data/vv.d100000,
	* benchmarks/blas/data/vv.d2,
	* benchmarks/blas/data/vv.d20,
	* benchmarks/blas/data/vv.d200,
	* benchmarks/blas/data/vv.d2000,
	* benchmarks/blas/data/vv.d20000,
	* benchmarks/blas/data/vv.d5,
	* benchmarks/blas/data/vv.d50,
	* benchmarks/blas/data/vv.d500,
	* benchmarks/blas/data/vv.d5000,
	* benchmarks/blas/data/vv.d50000,
	* benchmarks/blas/data/vvcc.d1,
	* benchmarks/blas/data/vvcc.d10,
	* benchmarks/blas/data/vvcc.d100,
	* benchmarks/blas/data/vvcc.d1000,
	* benchmarks/blas/data/vvcc.d10000,
	* benchmarks/blas/data/vvcc.d100000,
	* benchmarks/blas/data/vvcc.d2,
	* benchmarks/blas/data/vvcc.d20,
	* benchmarks/blas/data/vvcc.d200,
	* benchmarks/blas/data/vvcc.d2000,
	* benchmarks/blas/data/vvcc.d20000,
	* benchmarks/blas/data/vvcc.d5,
	* benchmarks/blas/data/vvcc.d50,
	* benchmarks/blas/data/vvcc.d500,
	* benchmarks/blas/data/vvcc.d5000,
	* benchmarks/blas/data/vvcc.d50000: New.

	* benchmarks/blas/Makefile.am,
	* benchmarks/blas/bench-dasum.inputs,
	* benchmarks/blas/bench-daxpy.inputs,
	* benchmarks/blas/bench-dcopy.inputs,
	* benchmarks/blas/bench-ddot.inputs,
	* benchmarks/blas/bench-dnrm2.inputs,
	* benchmarks/blas/bench-drot.inputs,
	* benchmarks/blas/bench-dscal.inputs,
	* benchmarks/blas/bench-dswap.inputs,
	* benchmarks/blas/bench-idamax.inputs,
	* benchmarks/blas/bench-isamax.inputs,
	* benchmarks/blas/bench-sasum.inputs,
	* benchmarks/blas/bench-saxpy.inputs,
	* benchmarks/blas/bench-scopy.inputs,
	* benchmarks/blas/bench-sdot.inputs,
	* benchmarks/blas/bench-snrm2.inputs,
	* benchmarks/blas/bench-srot.inputs,
	* benchmarks/blas/bench-sscal.inputs,
	* benchmarks/blas/bench-sswap.inputs: Update accordingly.
	
	* benchmarks/blas/Makefile.am: Update accordingly.

2009-11-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the BLAS benchmark suite.
	
	* benchmarks/blas/templates/xcopy.c,
	* benchmarks/blas/templates/xswap.c,
	* benchmarks/blas/sswap.c,
	* benchmarks/blas/scopy.c,
	* benchmarks/blas/dswap.c,
	* benchmarks/blas/dcopy.c,
	* benchmarks/blas/bench-sswap.c,
	* benchmarks/blas/bench-scopy.c,
	* benchmarks/blas/bench-dswap.c,
	* benchmarks/blas/bench-dcopy.c,
	* benchmarks/blas/bench-sswap.inputs,
	* benchmarks/blas/bench-scopy.inputs,
	* benchmarks/blas/bench-dswap.inputs,
	* benchmarks/blas/bench-dcopy.inputs: New.

	* benchmarks/blas/Makefile.am: Update accordingly.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor portability fix.

	* benchmarks/fft/fft_bench.c,
	* benchmarks/fft/fft_test.c,	
	* benchmarks/livermore/main_test.c: Use `clock()' instead of
	`get_cycles()' which is obsolete.

2009-11-04  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Optimize the BLAS benchmark suite.
	
	* benchmarks/blas/templates/xasum.c,
	* benchmarks/blas/templates/xaxpy.c,
	* benchmarks/blas/templates/xaxpyc.c,
	* benchmarks/blas/templates/xrot.c,
	* benchmarks/blas/templates/xnrm2.c,
	* benchmarks/blas/templates/xscal.c,
	* benchmarks/blas/templates/xdot.c,	
	* benchmarks/blas/templates/xdotc.c: Optimize some. Use anonymous
	thread arguments where appropriate.

2009-11-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* build-aux/benchmarks.mk: Make `bench.mk' dependent upon
	`Makefile.am' to catch file list updates.

2009-11-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the BLAS benchmark suite.
	
	* benchmarks/blas/templates/xiamax.c,
	* benchmarks/blas/isamax.c,
	* benchmarks/blas/idamax.c,
	* benchmarks/blas/bench-isamax.c,
	* benchmarks/blas/bench-idamax.c,
	* benchmarks/blas/bench-isamax.inputs,
	* benchmarks/blas/bench-idamax.inputs: New.

	* benchmarks/blas/Makefile.am: Update accordingly.

2009-11-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the BLAS benchmark suite.
	
	* benchmarks/blas/templates/xscal.c,
	* benchmarks/blas/sscal.c,
	* benchmarks/blas/dscal.c,
	* benchmarks/blas/bench-sscal.c,
	* benchmarks/blas/bench-dscal.c,
	* benchmarks/blas/bench-sscal.inputs,
	* benchmarks/blas/bench-dscal.inputs: New.

	* benchmarks/blas/Makefile.am: Update accordingly.
	
2009-11-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the BLAS benchmark suite.
	
	* benchmarks/blas/templates/xnrm2.c,
	* benchmarks/blas/snrm2.c,
	* benchmarks/blas/dnrm2.c,
	* benchmarks/blas/bench-snrm2.c,
	* benchmarks/blas/bench-dnrm2.c,
	* benchmarks/blas/bench-snrm2.inputs,
	* benchmarks/blas/bench-dnrm2.inputs: New.

	* benchmarks/blas/Makefile.am: Update accordingly.

2009-11-03  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the BLAS benchmark suite.
	
	* benchmarks/blas/templates/xdot.c: Simplify.
	
	* benchmarks/blas/bench-daxpy.c: Check array size differently.

	* benchmarks/blas/templates/xasum.c,
	* benchmarks/blas/sasum.c,
	* benchmarks/blas/dasum.c,
	* benchmarks/blas/bench-sasum.c,
	* benchmarks/blas/bench-dasum.c,
	* benchmarks/blas/bench-sasum.inputs,
	* benchmarks/blas/bench-dasum.inputs,
	* benchmarks/blas/asum.d1,
	* benchmarks/blas/asum.d2,
	* benchmarks/blas/asum.d3,
	* benchmarks/blas/templates/xrot.c,
	* benchmarks/blas/srot.c,
	* benchmarks/blas/drot.c,
	* benchmarks/blas/bench-srot.c,
	* benchmarks/blas/bench-drot.c,
	* benchmarks/blas/bench-srot.inputs,
	* benchmarks/blas/bench-drot.inputs,
	* benchmarks/blas/rot.d1,
	* benchmarks/blas/rot.d2,
	* benchmarks/blas/rot.d3: New.

2009-10-21  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Fix algorithm bug in `checkers' demo.
	
	* demo/checkers.c: Change check for position. 

2009-10-14  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the `mandel' demo.

	* benchmarks/mandel/mandel.c: Demonstrate measure intervals by
	defining two of them in the "work" part.

2009-10-13  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the benchmark framework.
	
	* benchmarks/lib/benchmark.h,	
	* benchmarks/lib/benchmark.c: Allow the `work' part of a benchmark
	to define sub-intervals for measurements.

2009-10-13  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the benchmark outer thread.
	
	* benchmarks/lib/benchmark.c: Enclose the measurements in a Fibre
	array when the Fibre format is specified.

2009-10-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fix.
	
	* build-aux/benchmarks.mk (clean-local-bench): Use `if' to avoid
	error when `bench.mk' doesn't exist.

2009-10-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Convert the `mandel' demo to the new benchmark framework.

	* demo/mandel.c: Rename to...	
	* benchmarks/mandel/mandel.c: ...here. Change to become a
	benchmark.

	* benchmarks/mandel/mandel.d1,
	* benchmarks/mandel/mandel.d2,
	* benchmarks/mandel/Makefile.am: New.

	* benchmarks/Makefile.am,
	* demo/Makefile.am,
	* configure.ac: Update accordingly.

2009-10-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the `blas' benchmarks with the new build tools.

	* benchmarks/blas/bench-daxpy.inputs,
	* benchmarks/blas/bench-saxpy.inputs: New.
	
	* benchmarks/blas/Makefile.am: Update to use the new framework.

2009-10-09  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Implement some automation to run benchmarks.
	
	* build-aux/genbench.sh,
	* build-aux/benchmarks.mk: New.

	* Makefile.am: Update accordingly.
	* configure.ac: Require bash.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Convert `blas' benchmarks code to new framework.
	
	* benchmarks/blas/blas-test-saxpy.c: Delete.
	
	* benchmarks/blas/bench-saxpy.c,
	* benchmarks/blas/bench-daxpy.c: New.

	* benchmarks/blas/axy.d1,
	* benchmarks/blas/axy.d2,	
	* benchmarks/blas/axy.d3: Example data for both `saxpy' and
	`daxpy'.

	* benchmarks/blas/Makefile.am: Update accordingly.
	
2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Start to implement the top-level benchmark program.
	
	* benchmarks/lib/benchmark.c,
	* benchmarks/lib/benchmark.h: New.
	
	* benchmarks/lib/Makefile.am: Compile library for multiple
	targets.

	* configure.ac: Check for `ranlib' since it is required for making
	libraries.

2009-10-08  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Introduce `benchmark/lib' for benchmarking framework.
	
	* benchmarks/lib/Makefile.am: New.
	* benchmarks/Makefile.am: Recurse into `lib'.

	* configure.ac: Generate Makefile for `lib'.

2009-10-07  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Create new demo `sep' to show off SEP allocation.
	
	* demo/sep.c: New.
	* demo/Makefile.am: Update accordingly.

2009-10-01  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Reinstate numeric checking for the FFT code.
	
	* benchmarks/fft/fft_test1.c,	
	* benchmarks/fft/fft_test2.c: Do not ignore numeric output anymore
	since the diverging results on MT-Alpha were due to a simulation
	bug that is now fixed.
	
2009-09-30  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Avoid `-n' in test code.
	
	* demo/mandel.c,
	* benchmarks/fft/fft_test1.c,	
	* benchmarks/fft/fft_test2.c: Do not use `-n' in SLT_RUN any more.

2009-09-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the `fft' benchmark program.
	
	* benchmarks/fft/fft_bench.c: Print cycle counts at each outer
	iteration.

2009-09-29  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the `mandel' demo.
	
	* demo/mandel.c: Update to use the new API definition from
	note [sl7].

2009-09-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Update `checkers' demo.
	
	* demo/checkers.c: Demonstrate `gfx_fb_set' since `gfx_putpixel'
	is already demoed in the `mandel' demo

2009-09-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Enhance the `mandel' demo.
	
	* demo/mandel.c: Refactor code to clarify steps. Change the color
	scheme to make the output more printer-friendly.

2009-09-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the `mandel' demo with use of the SEP protocol.
	
	* demo/mandel.c: Update to use place management.

2009-09-21  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Add some demos with graphics.

	`checkers' - create a 8x8 checker board.	
	`mandel' - approximate the Mandelbrot set.

	* demo/checkers.c,
	* demo/mandel.c: New.

	* demo/Makefile.am: Update accordingly.

2009-08-28  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Extend the SHA benchmark code.
	
	* benchmarks/sha/sha1.c: Remove block size in call to
	`sha_main_outer'.
	
	* benchmarks/sha/sha1_alt.c: New optimized version, thanks to
	Mike Lankamp.

	* benchmarks/sha/testsha.sh: New.
	
	* benchmarks/sha/Makefile.am: Update accordingly.
	
2009-08-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Minor packaging fixes.

	* benchmarks/livermore/genmk.sh: Be more verbose.

2009-08-26  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	Make package less dependent on the base tree.
	
	* bootstrap: Make less verbose. Use the new `sl-init-autoconf'.

2009-08-25  Raphael 'kena' Poss  <r.c.poss@uva.nl>

	* ChangeLog: initialize.

See `slc/ChangeLog.1' for earlier changes.

